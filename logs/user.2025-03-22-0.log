2025-03-22 08:33:48.504 [http-nio-8082-exec-1] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [邮箱号查询用户信息], 入参: {"email":"chinaanhuicsy@icloud.com"}, 请求类: UserController, 请求方法: findByEmail =================================== 
2025-03-22 08:33:48.514 [http-nio-8082-exec-1] DEBUG c.y.r.u.b.domain.mapper.UserDOMapper.selectByEmail - ==>  Preparing: select id, password from t_user where email = ?
2025-03-22 08:33:48.516 [http-nio-8082-exec-1] DEBUG c.y.r.u.b.domain.mapper.UserDOMapper.selectByEmail - ==> Parameters: chinaanhuicsy@icloud.com(String)
2025-03-22 08:33:48.517 [http-nio-8082-exec-1] DEBUG c.y.r.u.b.domain.mapper.UserDOMapper.selectByEmail - <==      Total: 1
2025-03-22 08:33:48.518 [http-nio-8082-exec-1] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [邮箱号查询用户信息], 耗时: 15ms, 出参: {"success":true,"message":null,"errorCode":null,"data":{"id":6101,"password":"$2a$10$qzYjnDnSb8VzEqNE7azGy.yD061rRWnzNQzduZcXQjV4iprv/Ie6m"}} =================================== 
2025-03-22 08:34:20.732 [http-nio-8082-exec-2] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [邮箱号查询用户信息], 入参: {"email":"chinaanhuicsy@icloud.com"}, 请求类: UserController, 请求方法: findByEmail =================================== 
2025-03-22 08:34:20.732 [http-nio-8082-exec-2] DEBUG c.y.r.u.b.domain.mapper.UserDOMapper.selectByEmail - ==>  Preparing: select id, password from t_user where email = ?
2025-03-22 08:34:20.732 [http-nio-8082-exec-2] DEBUG c.y.r.u.b.domain.mapper.UserDOMapper.selectByEmail - ==> Parameters: chinaanhuicsy@icloud.com(String)
2025-03-22 08:34:20.733 [http-nio-8082-exec-2] DEBUG c.y.r.u.b.domain.mapper.UserDOMapper.selectByEmail - <==      Total: 1
2025-03-22 08:34:20.733 [http-nio-8082-exec-2] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [邮箱号查询用户信息], 耗时: 1ms, 出参: {"success":true,"message":null,"errorCode":null,"data":{"id":6101,"password":"$2a$10$qzYjnDnSb8VzEqNE7azGy.yD061rRWnzNQzduZcXQjV4iprv/Ie6m"}} =================================== 
2025-03-22 08:35:14.976 [http-nio-8082-exec-3] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [邮箱号查询用户信息], 入参: {"email":"chinaanhuicsy@icloud.com"}, 请求类: UserController, 请求方法: findByEmail =================================== 
2025-03-22 08:35:14.976 [http-nio-8082-exec-3] DEBUG c.y.r.u.b.domain.mapper.UserDOMapper.selectByEmail - ==>  Preparing: select id, password from t_user where email = ?
2025-03-22 08:35:14.976 [http-nio-8082-exec-3] DEBUG c.y.r.u.b.domain.mapper.UserDOMapper.selectByEmail - ==> Parameters: chinaanhuicsy@icloud.com(String)
2025-03-22 08:35:14.977 [http-nio-8082-exec-3] DEBUG c.y.r.u.b.domain.mapper.UserDOMapper.selectByEmail - <==      Total: 1
2025-03-22 08:35:14.977 [http-nio-8082-exec-3] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [邮箱号查询用户信息], 耗时: 2ms, 出参: {"success":true,"message":null,"errorCode":null,"data":{"id":6101,"password":"$2a$10$qzYjnDnSb8VzEqNE7azGy.yD061rRWnzNQzduZcXQjV4iprv/Ie6m"}} =================================== 
2025-03-22 08:36:17.611 [http-nio-8082-exec-5] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [邮箱号查询用户信息], 入参: {"email":"chinaanhuicsy@icloud.com"}, 请求类: UserController, 请求方法: findByEmail =================================== 
2025-03-22 08:36:17.619 [http-nio-8082-exec-5] DEBUG c.y.r.u.b.domain.mapper.UserDOMapper.selectByEmail - ==>  Preparing: select id, password from t_user where email = ?
2025-03-22 08:36:17.619 [http-nio-8082-exec-5] DEBUG c.y.r.u.b.domain.mapper.UserDOMapper.selectByEmail - ==> Parameters: chinaanhuicsy@icloud.com(String)
2025-03-22 08:36:17.622 [http-nio-8082-exec-5] DEBUG c.y.r.u.b.domain.mapper.UserDOMapper.selectByEmail - <==      Total: 1
2025-03-22 08:36:17.622 [http-nio-8082-exec-5] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [邮箱号查询用户信息], 耗时: 11ms, 出参: {"success":true,"message":null,"errorCode":null,"data":{"id":6101,"password":"$2a$10$qzYjnDnSb8VzEqNE7azGy.yD061rRWnzNQzduZcXQjV4iprv/Ie6m"}} =================================== 
2025-03-22 08:37:34.627 [http-nio-8082-exec-7] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [邮箱号查询用户信息], 入参: {"email":"chinaanhuicsy@icloud.com"}, 请求类: UserController, 请求方法: findByEmail =================================== 
2025-03-22 08:37:34.627 [http-nio-8082-exec-7] DEBUG c.y.r.u.b.domain.mapper.UserDOMapper.selectByEmail - ==>  Preparing: select id, password from t_user where email = ?
2025-03-22 08:37:34.628 [http-nio-8082-exec-7] DEBUG c.y.r.u.b.domain.mapper.UserDOMapper.selectByEmail - ==> Parameters: chinaanhuicsy@icloud.com(String)
2025-03-22 08:37:34.629 [http-nio-8082-exec-7] DEBUG c.y.r.u.b.domain.mapper.UserDOMapper.selectByEmail - <==      Total: 1
2025-03-22 08:37:34.630 [http-nio-8082-exec-7] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [邮箱号查询用户信息], 耗时: 3ms, 出参: {"success":true,"message":null,"errorCode":null,"data":{"id":6101,"password":"$2a$10$qzYjnDnSb8VzEqNE7azGy.yD061rRWnzNQzduZcXQjV4iprv/Ie6m"}} =================================== 
2025-03-22 08:37:59.745 [http-nio-8082-exec-8] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [邮箱号查询用户信息], 入参: {"email":"chinaanhuicsy@icloud.com"}, 请求类: UserController, 请求方法: findByEmail =================================== 
2025-03-22 08:37:59.745 [http-nio-8082-exec-8] DEBUG c.y.r.u.b.domain.mapper.UserDOMapper.selectByEmail - ==>  Preparing: select id, password from t_user where email = ?
2025-03-22 08:37:59.745 [http-nio-8082-exec-8] DEBUG c.y.r.u.b.domain.mapper.UserDOMapper.selectByEmail - ==> Parameters: chinaanhuicsy@icloud.com(String)
2025-03-22 08:37:59.746 [http-nio-8082-exec-8] DEBUG c.y.r.u.b.domain.mapper.UserDOMapper.selectByEmail - <==      Total: 1
2025-03-22 08:37:59.746 [http-nio-8082-exec-8] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [邮箱号查询用户信息], 耗时: 1ms, 出参: {"success":true,"message":null,"errorCode":null,"data":{"id":6101,"password":"$2a$10$qzYjnDnSb8VzEqNE7azGy.yD061rRWnzNQzduZcXQjV4iprv/Ie6m"}} =================================== 
2025-03-22 08:39:06.576 [http-nio-8082-exec-9] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [邮箱号查询用户信息], 入参: {"email":"chinaanhuicsy@icloud.com"}, 请求类: UserController, 请求方法: findByEmail =================================== 
2025-03-22 08:39:06.576 [http-nio-8082-exec-9] DEBUG c.y.r.u.b.domain.mapper.UserDOMapper.selectByEmail - ==>  Preparing: select id, password from t_user where email = ?
2025-03-22 08:39:06.576 [http-nio-8082-exec-9] DEBUG c.y.r.u.b.domain.mapper.UserDOMapper.selectByEmail - ==> Parameters: chinaanhuicsy@icloud.com(String)
2025-03-22 08:39:06.577 [http-nio-8082-exec-9] DEBUG c.y.r.u.b.domain.mapper.UserDOMapper.selectByEmail - <==      Total: 1
2025-03-22 08:39:06.577 [http-nio-8082-exec-9] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [邮箱号查询用户信息], 耗时: 2ms, 出参: {"success":true,"message":null,"errorCode":null,"data":{"id":6101,"password":"$2a$10$qzYjnDnSb8VzEqNE7azGy.yD061rRWnzNQzduZcXQjV4iprv/Ie6m"}} =================================== 
2025-03-22 08:39:14.437 [http-nio-8082-exec-1] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [邮箱号查询用户信息], 入参: {"email":"chinaanhuicsy@icloud.com"}, 请求类: UserController, 请求方法: findByEmail =================================== 
2025-03-22 08:39:14.437 [http-nio-8082-exec-1] DEBUG c.y.r.u.b.domain.mapper.UserDOMapper.selectByEmail - ==>  Preparing: select id, password from t_user where email = ?
2025-03-22 08:39:14.437 [http-nio-8082-exec-1] DEBUG c.y.r.u.b.domain.mapper.UserDOMapper.selectByEmail - ==> Parameters: chinaanhuicsy@icloud.com(String)
2025-03-22 08:39:14.438 [http-nio-8082-exec-1] DEBUG c.y.r.u.b.domain.mapper.UserDOMapper.selectByEmail - <==      Total: 1
2025-03-22 08:39:14.438 [http-nio-8082-exec-1] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [邮箱号查询用户信息], 耗时: 1ms, 出参: {"success":true,"message":null,"errorCode":null,"data":{"id":6101,"password":"$2a$10$qzYjnDnSb8VzEqNE7azGy.yD061rRWnzNQzduZcXQjV4iprv/Ie6m"}} =================================== 
2025-03-22 08:39:44.064 [http-nio-8082-exec-2] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [邮箱号查询用户信息], 入参: {"email":"chinaanhuicsy@icloud.com"}, 请求类: UserController, 请求方法: findByEmail =================================== 
2025-03-22 08:39:44.064 [http-nio-8082-exec-2] DEBUG c.y.r.u.b.domain.mapper.UserDOMapper.selectByEmail - ==>  Preparing: select id, password from t_user where email = ?
2025-03-22 08:39:44.065 [http-nio-8082-exec-2] DEBUG c.y.r.u.b.domain.mapper.UserDOMapper.selectByEmail - ==> Parameters: chinaanhuicsy@icloud.com(String)
2025-03-22 08:39:44.065 [http-nio-8082-exec-2] DEBUG c.y.r.u.b.domain.mapper.UserDOMapper.selectByEmail - <==      Total: 1
2025-03-22 08:39:44.066 [http-nio-8082-exec-2] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [邮箱号查询用户信息], 耗时: 2ms, 出参: {"success":true,"message":null,"errorCode":null,"data":{"id":6101,"password":"$2a$10$qzYjnDnSb8VzEqNE7azGy.yD061rRWnzNQzduZcXQjV4iprv/Ie6m"}} =================================== 
2025-03-22 08:43:52.180 [Thread-7] WARN  com.alibaba.nacos.common.notify.NotifyCenter - [NotifyCenter] Start destroying Publisher
2025-03-22 08:43:52.180 [Thread-10] WARN  c.alibaba.nacos.common.http.HttpClientBeanHolder - [HttpClientBeanHolder] Start destroying common HttpClient
2025-03-22 08:43:52.180 [Thread-7] WARN  com.alibaba.nacos.common.notify.NotifyCenter - [NotifyCenter] Destruction of the end
2025-03-22 08:43:52.181 [Thread-10] WARN  c.alibaba.nacos.common.http.HttpClientBeanHolder - [HttpClientBeanHolder] Destruction of the end
2025-03-22 08:43:52.260 [SpringApplicationShutdownHook] INFO  c.a.cloud.nacos.registry.NacosServiceRegistry - De-registering from Nacos Server now...
2025-03-22 08:43:52.260 [SpringApplicationShutdownHook] INFO  com.alibaba.nacos.client.naming - [DEREGISTER-SERVICE] redbook deregistering service redbook-user with instance: Instance{instanceId='null', ip='10.108.20.173', port=8082, weight=1.0, healthy=true, enabled=true, ephemeral=true, clusterName='DEFAULT', serviceName='null', metadata={}}
2025-03-22 08:43:52.266 [SpringApplicationShutdownHook] INFO  c.a.cloud.nacos.registry.NacosServiceRegistry - De-registration finished.
2025-03-22 08:43:52.266 [SpringApplicationShutdownHook] INFO  com.alibaba.nacos.client.naming - com.alibaba.nacos.client.naming.cache.ServiceInfoHolder do shutdown begin
2025-03-22 08:43:52.266 [SpringApplicationShutdownHook] INFO  com.alibaba.nacos.client.naming - com.alibaba.nacos.client.naming.backups.FailoverReactor do shutdown begin
2025-03-22 08:43:52.266 [SpringApplicationShutdownHook] INFO  com.alibaba.nacos.client.naming - com.alibaba.nacos.client.naming.backups.FailoverReactor do shutdown stop
2025-03-22 08:43:52.266 [SpringApplicationShutdownHook] INFO  com.alibaba.nacos.client.naming - com.alibaba.nacos.client.naming.cache.ServiceInfoHolder do shutdown stop
2025-03-22 08:43:52.266 [SpringApplicationShutdownHook] INFO  com.alibaba.nacos.client.naming - com.alibaba.nacos.client.naming.remote.NamingClientProxyDelegate do shutdown begin
2025-03-22 08:43:52.266 [SpringApplicationShutdownHook] INFO  com.alibaba.nacos.client.naming - com.alibaba.nacos.client.naming.core.ServiceInfoUpdateService do shutdown begin
2025-03-22 08:43:52.266 [SpringApplicationShutdownHook] INFO  com.alibaba.nacos.client.naming - com.alibaba.nacos.client.naming.core.ServiceInfoUpdateService do shutdown stop
2025-03-22 08:43:52.266 [SpringApplicationShutdownHook] INFO  com.alibaba.nacos.client.naming - com.alibaba.nacos.client.naming.core.ServerListManager do shutdown begin
2025-03-22 08:43:52.266 [SpringApplicationShutdownHook] WARN  com.alibaba.nacos.client.naming - [NamingHttpClientManager] Start destroying NacosRestTemplate
2025-03-22 08:43:52.267 [SpringApplicationShutdownHook] WARN  com.alibaba.nacos.client.naming - [NamingHttpClientManager] Destruction of the end
2025-03-22 08:43:52.267 [SpringApplicationShutdownHook] INFO  com.alibaba.nacos.client.naming - com.alibaba.nacos.client.naming.core.ServerListManager do shutdown stop
2025-03-22 08:43:52.267 [SpringApplicationShutdownHook] INFO  com.alibaba.nacos.client.naming - com.alibaba.nacos.client.naming.remote.http.NamingHttpClientProxy do shutdown begin
2025-03-22 08:43:52.267 [SpringApplicationShutdownHook] WARN  com.alibaba.nacos.client.naming - [NamingHttpClientManager] Start destroying NacosRestTemplate
2025-03-22 08:43:52.267 [SpringApplicationShutdownHook] WARN  com.alibaba.nacos.client.naming - [NamingHttpClientManager] Destruction of the end
2025-03-22 08:43:52.267 [SpringApplicationShutdownHook] INFO  com.alibaba.nacos.client.naming - com.alibaba.nacos.client.naming.remote.http.NamingHttpClientProxy do shutdown stop
2025-03-22 08:43:52.267 [SpringApplicationShutdownHook] INFO  com.alibaba.nacos.common.remote.client - Shutdown rpc client, set status to shutdown
2025-03-22 08:43:52.267 [SpringApplicationShutdownHook] INFO  com.alibaba.nacos.common.remote.client - Shutdown client event executor java.util.concurrent.ScheduledThreadPoolExecutor@315d5e3c[Running, pool size = 2, active threads = 2, queued tasks = 0, completed tasks = 0]
2025-03-22 08:43:52.267 [SpringApplicationShutdownHook] INFO  com.alibaba.nacos.common.remote.client - Close current connection 1742554778828_172.17.0.1_47082
2025-03-22 08:43:52.268 [SpringApplicationShutdownHook] INFO  c.a.nacos.common.remote.client.grpc.GrpcClient - Shutdown grpc executor java.util.concurrent.ThreadPoolExecutor@41311e56[Running, pool size = 3, active threads = 0, queued tasks = 0, completed tasks = 10353]
2025-03-22 08:43:52.268 [SpringApplicationShutdownHook] INFO  com.alibaba.nacos.client.naming - Shutdown grpc redo service executor java.util.concurrent.ScheduledThreadPoolExecutor@5b85c7b0[Running, pool size = 1, active threads = 0, queued tasks = 1, completed tasks = 16685]
2025-03-22 08:43:52.268 [SpringApplicationShutdownHook] INFO  c.a.n.client.auth.ram.identify.CredentialWatcher - [null] CredentialWatcher is stopped
2025-03-22 08:43:52.268 [SpringApplicationShutdownHook] INFO  c.a.n.client.auth.ram.identify.CredentialService - [null] CredentialService is freed
2025-03-22 08:43:52.269 [SpringApplicationShutdownHook] INFO  com.alibaba.nacos.client.naming - com.alibaba.nacos.client.naming.remote.NamingClientProxyDelegate do shutdown stop
2025-03-22 08:43:52.418 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-03-22 08:43:52.422 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-03-22 09:27:12.467 [main] WARN  com.alibaba.nacos.client.logging.NacosLogging - Load Logback Configuration of Nacos fail, message: Could not initialize Logback Nacos logging from classpath:nacos-logback.xml
2025-03-22 09:27:12.517 [main] WARN  com.alibaba.nacos.client.logging.NacosLogging - Load Logback Configuration of Nacos fail, message: Could not initialize Logback Nacos logging from classpath:nacos-logback.xml
2025-03-22 09:27:12.867 [main] WARN  com.alibaba.nacos.client.logging.NacosLogging - Load Logback Configuration of Nacos fail, message: Could not initialize Logback Nacos logging from classpath:nacos-logback.xml
2025-03-22 09:27:12.875 [main] WARN  com.alibaba.nacos.client.logging.NacosLogging - Load Logback Configuration of Nacos fail, message: Could not initialize Logback Nacos logging from classpath:nacos-logback.xml
2025-03-22 09:27:12.876 [main] INFO  c.y.redbook.user.biz.RedbookUserBizApplication - The following 1 profile is active: "dev"
2025-03-22 09:27:13.324 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-22 09:27:13.327 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-22 09:27:13.345 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2025-03-22 09:27:13.496 [main] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=a6861ec5-f64d-3258-b3cc-6d969a327b3c
2025-03-22 09:27:13.516 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.yeyang.redbook.oss.api.FileFeignApi' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-03-22 09:27:13.517 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.yeyang.redbook.user.api.UserFeignApi' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-03-22 09:27:13.518 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.yeyang.redbook.distributed.id.generator.api.DistributedIdGeneratorFeignApi' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-03-22 09:27:13.890 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8082 (http)
2025-03-22 09:27:13.897 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-03-22 09:27:13.898 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.5]
2025-03-22 09:27:13.968 [main] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-03-22 09:27:13.968 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1080 ms
2025-03-22 09:27:14.073 [main] INFO  c.a.d.s.b.a.DruidDataSourceAutoConfigure - Init DruidDataSource
2025-03-22 09:27:14.282 [main] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-03-22 09:27:14.532 [main] INFO  o.s.cloud.openfeign.FeignClientFactoryBean - For 'redbook-oss' URL not provided. Will try picking an instance via load-balancing.
2025-03-22 09:27:14.758 [main] INFO  o.s.cloud.openfeign.FeignClientFactoryBean - For 'redbook-distributed-id-generator' URL not provided. Will try picking an instance via load-balancing.
2025-03-22 09:27:15.444 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8082 (http) with context path ''
2025-03-22 09:27:15.450 [main] WARN  com.alibaba.nacos.client.logging.NacosLogging - Load Logback Configuration of Nacos fail, message: Could not initialize Logback Nacos logging from classpath:nacos-logback.xml
2025-03-22 09:27:15.450 [main] INFO  com.alibaba.nacos.client.naming - initializer namespace from ans.namespace attribute : null
2025-03-22 09:27:15.451 [main] INFO  com.alibaba.nacos.client.naming - initializer namespace from ALIBABA_ALIWARE_NAMESPACE attribute :null
2025-03-22 09:27:15.451 [main] INFO  com.alibaba.nacos.client.naming - initializer namespace from namespace attribute :null
2025-03-22 09:27:15.471 [main] INFO  com.alibaba.nacos.client.utils.ParamUtil - [settings] [req-serv] nacos-server port:8848
2025-03-22 09:27:15.471 [main] INFO  com.alibaba.nacos.client.utils.ParamUtil - [settings] [http-client] connect timeout:1000
2025-03-22 09:27:15.472 [main] INFO  com.alibaba.nacos.client.utils.ParamUtil - PER_TASK_CONFIG_SIZE: 3000.0
2025-03-22 09:27:15.476 [main] INFO  c.a.n.p.auth.spi.client.ClientAuthPluginManager - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
2025-03-22 09:27:15.477 [main] INFO  c.a.n.p.auth.spi.client.ClientAuthPluginManager - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
2025-03-22 09:27:15.479 [main] INFO  c.a.n.client.auth.ram.identify.CredentialWatcher - null No credential found
2025-03-22 09:27:15.486 [main] INFO  com.alibaba.nacos.common.remote.client - [RpcClientFactory] create a new rpc client of 78018135-3594-4c8a-a910-2b6cf9b3e5b1
2025-03-22 09:27:15.510 [main] INFO  com.alibaba.nacos.common.remote.client - [78018135-3594-4c8a-a910-2b6cf9b3e5b1] RpcClient init, ServerListFactory = com.alibaba.nacos.client.naming.core.ServerListManager
2025-03-22 09:27:15.510 [main] INFO  com.alibaba.nacos.common.remote.client - [78018135-3594-4c8a-a910-2b6cf9b3e5b1] Registry connection listener to current client:com.alibaba.nacos.client.naming.remote.gprc.redo.NamingGrpcRedoService
2025-03-22 09:27:15.511 [main] INFO  com.alibaba.nacos.common.remote.client - [78018135-3594-4c8a-a910-2b6cf9b3e5b1] Register server push request handler:com.alibaba.nacos.client.naming.remote.gprc.NamingPushRequestHandler
2025-03-22 09:27:15.513 [main] INFO  com.alibaba.nacos.common.remote.client - [78018135-3594-4c8a-a910-2b6cf9b3e5b1] Try to connect to server on start up, server: {serverIp = '127.0.0.1', server main port = 8848}
2025-03-22 09:27:15.538 [main] INFO  c.a.nacos.common.remote.client.grpc.GrpcClient - grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2025-03-22 09:27:16.394 [main] INFO  com.alibaba.nacos.common.remote.client - [78018135-3594-4c8a-a910-2b6cf9b3e5b1] Success to connect to server [127.0.0.1:8848] on start up, connectionId = 1742606836207_172.17.0.1_37768
2025-03-22 09:27:16.394 [com.alibaba.nacos.client.remote.worker] INFO  com.alibaba.nacos.common.remote.client - [78018135-3594-4c8a-a910-2b6cf9b3e5b1] Notify connected event to listeners.
2025-03-22 09:27:16.394 [com.alibaba.nacos.client.remote.worker] INFO  com.alibaba.nacos.client.naming - Grpc connection connect
2025-03-22 09:27:16.394 [main] INFO  com.alibaba.nacos.common.remote.client - [78018135-3594-4c8a-a910-2b6cf9b3e5b1] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$ConnectResetRequestHandler
2025-03-22 09:27:16.395 [main] INFO  com.alibaba.nacos.common.remote.client - [78018135-3594-4c8a-a910-2b6cf9b3e5b1] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$$Lambda$1266/0x000001dc4b8f7800
2025-03-22 09:27:16.395 [main] INFO  com.alibaba.nacos.client.naming - [REGISTER-SERVICE] redbook registering service redbook-user with instance Instance{instanceId='null', ip='10.108.20.173', port=8082, weight=1.0, healthy=true, enabled=true, ephemeral=true, clusterName='DEFAULT', serviceName='null', metadata={IPv6=[2001:da8:204:1081:0:2ea3:f013:4e5b], preserved.register.source=SPRING_CLOUD}}
2025-03-22 09:27:16.407 [main] INFO  c.a.cloud.nacos.registry.NacosServiceRegistry - nacos registry, DEFAULT_GROUP redbook-user 10.108.20.173:8082 register finished
2025-03-22 09:27:16.541 [main] INFO  c.y.redbook.user.biz.RedbookUserBizApplication - Started RedbookUserBizApplication in 4.576 seconds (process running for 5.003)
2025-03-22 09:27:16.541 [main] INFO  c.y.r.u.biz.runner.PushRolePermissions2RedisRunner - ==> 服务启动，开始同步角色权限数据到 Redis 中...
2025-03-22 09:27:16.868 [main] WARN  c.y.r.u.biz.runner.PushRolePermissions2RedisRunner - ==> 角色权限数据已经同步至 Redis 中，不再同步...
2025-03-22 09:29:36.603 [http-nio-8082-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-22 09:29:36.603 [http-nio-8082-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-03-22 09:29:36.603 [http-nio-8082-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2025-03-22 09:29:36.665 [http-nio-8082-exec-1] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[2100]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 09:29:36.680 [http-nio-8082-exec-1] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 15ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":2100,"nickName":"研究生","avatar":"http://127.0.0.1:9000/redbook/827ddaa493c345868bd9b3434d3dbc2d.jpg","introduction":"分享生活\r\n合作：xiarui@mxbrand.net"}]} =================================== 
2025-03-22 09:33:47.764 [http-nio-8082-exec-5] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[2100]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 09:33:47.766 [http-nio-8082-exec-5] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 2ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":2100,"nickName":"研究生","avatar":"http://127.0.0.1:9000/redbook/827ddaa493c345868bd9b3434d3dbc2d.jpg","introduction":"分享生活\r\n合作：xiarui@mxbrand.net"}]} =================================== 
2025-03-22 09:38:09.920 [http-nio-8082-exec-3] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [用户注册], 入参: {"email":"2861173454@qq.com"}, 请求类: UserController, 请求方法: register =================================== 
2025-03-22 09:38:09.942 [http-nio-8082-exec-3] DEBUG c.y.r.u.b.domain.mapper.UserDOMapper.selectByEmail - ==>  Preparing: select id, password from t_user where email = ?
2025-03-22 09:38:10.037 [http-nio-8082-exec-3] DEBUG c.y.r.u.b.domain.mapper.UserDOMapper.selectByEmail - ==> Parameters: 2861173454@qq.com(String)
2025-03-22 09:38:10.049 [http-nio-8082-exec-3] DEBUG c.y.r.u.b.domain.mapper.UserDOMapper.selectByEmail - <==      Total: 0
2025-03-22 09:38:10.050 [http-nio-8082-exec-3] INFO  c.y.redbook.user.biz.service.impl.UserServiceImpl - ==> 用户是否注册, email: 2861173454@qq.com, userDO: null
2025-03-22 09:38:10.089 [http-nio-8082-exec-3] INFO  com.alibaba.nacos.client.naming - [SUBSCRIBE-SERVICE] service:redbook-distributed-id-generator, group:DEFAULT_GROUP, clusters: 
2025-03-22 09:38:10.097 [http-nio-8082-exec-3] INFO  com.alibaba.nacos.client.naming - init new ips(1) service: DEFAULT_GROUP@@redbook-distributed-id-generator -> [{"ip":"10.108.20.173","port":8085,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"DEFAULT","serviceName":"DEFAULT_GROUP@@redbook-distributed-id-generator","metadata":{"preserved.register.source":"SPRING_CLOUD","IPv6":"[2001:da8:204:1081:0:2ea3:f013:4e5b]"},"ipDeleteTimeout":30000,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000}]
2025-03-22 09:38:10.102 [http-nio-8082-exec-3] INFO  com.alibaba.nacos.client.naming - current ips:(1) service: DEFAULT_GROUP@@redbook-distributed-id-generator -> [{"ip":"10.108.20.173","port":8085,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"DEFAULT","serviceName":"DEFAULT_GROUP@@redbook-distributed-id-generator","metadata":{"preserved.register.source":"SPRING_CLOUD","IPv6":"[2001:da8:204:1081:0:2ea3:f013:4e5b]"},"ipDeleteTimeout":30000,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000}]
2025-03-22 09:38:10.200 [http-nio-8082-exec-3] DEBUG c.y.r.user.biz.domain.mapper.UserDOMapper.insert - ==>  Preparing: insert into t_user (id, redbook_id, `password`, nickname, avatar, birthday, background_img, email, sex, `status`, introduction, create_time, update_time, is_deleted) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-03-22 09:38:10.266 [http-nio-8082-exec-3] DEBUG c.y.r.user.biz.domain.mapper.UserDOMapper.insert - ==> Parameters: 8100(Long), 12100(String), null, 小红薯12100(String), null, null, null, 2861173454@qq.com(String), null, 0(Integer), null, 2025-03-22T09:38:10.199840100(LocalDateTime), 2025-03-22T09:38:10.199840100(LocalDateTime), false(Boolean)
2025-03-22 09:38:10.269 [http-nio-8082-exec-3] DEBUG c.y.r.user.biz.domain.mapper.UserDOMapper.insert - <==    Updates: 1
2025-03-22 09:38:10.271 [http-nio-8082-exec-3] DEBUG c.y.r.u.biz.domain.mapper.UserRoleDOMapper.insert - ==>  Preparing: insert into t_user_role_rel (id, user_id, role_id, create_time, update_time, is_deleted ) values (?, ?, ?, ?, ?, ? )
2025-03-22 09:38:10.271 [http-nio-8082-exec-3] DEBUG c.y.r.u.biz.domain.mapper.UserRoleDOMapper.insert - ==> Parameters: null, 8100(Long), 1(Long), 2025-03-22T09:38:10.271985100(LocalDateTime), 2025-03-22T09:38:10.271985100(LocalDateTime), false(Boolean)
2025-03-22 09:38:10.272 [http-nio-8082-exec-3] DEBUG c.y.r.u.biz.domain.mapper.UserRoleDOMapper.insert - <==    Updates: 1
2025-03-22 09:38:10.273 [http-nio-8082-exec-3] DEBUG c.y.r.u.b.d.mapper.RoleDOMapper.selectByPrimaryKey - ==>  Preparing: select id, role_name, role_key, `status`, sort, remark, create_time, update_time, is_deleted from t_role where id = ?
2025-03-22 09:38:10.273 [http-nio-8082-exec-3] DEBUG c.y.r.u.b.d.mapper.RoleDOMapper.selectByPrimaryKey - ==> Parameters: 1(Long)
2025-03-22 09:38:10.276 [http-nio-8082-exec-3] DEBUG c.y.r.u.b.d.mapper.RoleDOMapper.selectByPrimaryKey - <==      Total: 1
2025-03-22 09:38:10.281 [http-nio-8082-exec-3] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [用户注册], 耗时: 362ms, 出参: {"success":true,"message":null,"errorCode":null,"data":8100} =================================== 
2025-03-22 09:38:10.518 [http-nio-8082-exec-6] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 8100
2025-03-22 09:38:10.519 [http-nio-8082-exec-6] DEBUG c.y.r.u.b.d.mapper.UserDOMapper.selectByPrimaryKey - ==>  Preparing: select id, redbook_id, `password`, nickname, avatar, birthday, background_img, email, sex, `status`, introduction, create_time, update_time, is_deleted from t_user where id = ?
2025-03-22 09:38:10.519 [http-nio-8082-exec-6] DEBUG c.y.r.u.b.d.mapper.UserDOMapper.selectByPrimaryKey - ==> Parameters: 8100(Long)
2025-03-22 09:38:10.520 [http-nio-8082-exec-6] DEBUG c.y.r.u.b.d.mapper.UserDOMapper.selectByPrimaryKey - <==      Total: 1
2025-03-22 09:38:10.523 [http-nio-8082-exec-6] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 8100
2025-03-22 09:38:10.694 [nacos-grpc-client-executor-127.0.0.1-157] INFO  com.alibaba.nacos.common.remote.client - [78018135-3594-4c8a-a910-2b6cf9b3e5b1] Receive server push request, request = NotifySubscriberRequest, requestId = 5
2025-03-22 09:38:10.694 [nacos-grpc-client-executor-127.0.0.1-157] INFO  com.alibaba.nacos.common.remote.client - [78018135-3594-4c8a-a910-2b6cf9b3e5b1] Ack server push request, request = NotifySubscriberRequest, requestId = 5
2025-03-22 09:38:31.027 [http-nio-8082-exec-7] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 8100
2025-03-22 09:38:31.028 [http-nio-8082-exec-7] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[2100]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 09:38:31.029 [http-nio-8082-exec-7] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 2ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":2100,"nickName":"研究生","avatar":"http://127.0.0.1:9000/redbook/827ddaa493c345868bd9b3434d3dbc2d.jpg","introduction":"分享生活\r\n合作：xiarui@mxbrand.net"}]} =================================== 
2025-03-22 09:38:31.030 [http-nio-8082-exec-7] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 8100
2025-03-22 09:38:33.210 [http-nio-8082-exec-8] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 8100
2025-03-22 09:38:33.213 [http-nio-8082-exec-8] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [查询用户信息], 入参: {"id":8100}, 请求类: UserController, 请求方法: findById =================================== 
2025-03-22 09:38:33.215 [http-nio-8082-exec-8] DEBUG c.y.r.u.b.d.mapper.UserDOMapper.selectByPrimaryKey - ==>  Preparing: select id, redbook_id, `password`, nickname, avatar, birthday, background_img, email, sex, `status`, introduction, create_time, update_time, is_deleted from t_user where id = ?
2025-03-22 09:38:33.216 [http-nio-8082-exec-8] DEBUG c.y.r.u.b.d.mapper.UserDOMapper.selectByPrimaryKey - ==> Parameters: 8100(Long)
2025-03-22 09:38:33.217 [http-nio-8082-exec-8] DEBUG c.y.r.u.b.d.mapper.UserDOMapper.selectByPrimaryKey - <==      Total: 1
2025-03-22 09:38:33.218 [http-nio-8082-exec-8] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [查询用户信息], 耗时: 5ms, 出参: {"success":true,"message":null,"errorCode":null,"data":{"id":8100,"nickName":"小红薯12100","avatar":null,"introduction":null}} =================================== 
2025-03-22 09:38:33.219 [http-nio-8082-exec-8] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 8100
2025-03-22 09:38:36.993 [http-nio-8082-exec-9] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 8100
2025-03-22 09:38:36.994 [http-nio-8082-exec-9] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [查询用户信息], 入参: {"id":8100}, 请求类: UserController, 请求方法: findById =================================== 
2025-03-22 09:38:36.995 [http-nio-8082-exec-9] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [查询用户信息], 耗时: 1ms, 出参: {"success":true,"message":null,"errorCode":null,"data":{"id":8100,"nickName":"小红薯12100","avatar":null,"introduction":null}} =================================== 
2025-03-22 09:38:36.996 [http-nio-8082-exec-9] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 8100
2025-03-22 10:14:03.875 [http-nio-8082-exec-5] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 8100
2025-03-22 10:14:03.877 [http-nio-8082-exec-5] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[2100]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 10:14:03.879 [http-nio-8082-exec-5] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 2ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":2100,"nickName":"研究生","avatar":"http://127.0.0.1:9000/redbook/827ddaa493c345868bd9b3434d3dbc2d.jpg","introduction":"分享生活\r\n合作：xiarui@mxbrand.net"}]} =================================== 
2025-03-22 10:14:03.880 [http-nio-8082-exec-5] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 8100
2025-03-22 10:14:06.396 [http-nio-8082-exec-4] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 8100
2025-03-22 10:14:06.397 [http-nio-8082-exec-4] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[2100]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 10:14:06.399 [http-nio-8082-exec-4] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 1ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":2100,"nickName":"研究生","avatar":"http://127.0.0.1:9000/redbook/827ddaa493c345868bd9b3434d3dbc2d.jpg","introduction":"分享生活\r\n合作：xiarui@mxbrand.net"}]} =================================== 
2025-03-22 10:14:06.400 [http-nio-8082-exec-4] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 8100
2025-03-22 10:16:47.551 [http-nio-8082-exec-6] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 8100
2025-03-22 10:16:47.552 [http-nio-8082-exec-6] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[2100]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 10:16:47.554 [http-nio-8082-exec-6] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 2ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":2100,"nickName":"研究生","avatar":"http://127.0.0.1:9000/redbook/827ddaa493c345868bd9b3434d3dbc2d.jpg","introduction":"分享生活\r\n合作：xiarui@mxbrand.net"}]} =================================== 
2025-03-22 10:16:47.554 [http-nio-8082-exec-6] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 8100
2025-03-22 10:17:21.952 [http-nio-8082-exec-7] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 8100
2025-03-22 10:17:21.953 [http-nio-8082-exec-7] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[8100,2100]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 10:17:21.955 [http-nio-8082-exec-7] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 2ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":8100,"nickName":"小红薯12100","avatar":null,"introduction":null},{"id":2100,"nickName":"研究生","avatar":"http://127.0.0.1:9000/redbook/827ddaa493c345868bd9b3434d3dbc2d.jpg","introduction":"分享生活\r\n合作：xiarui@mxbrand.net"}]} =================================== 
2025-03-22 10:17:21.956 [http-nio-8082-exec-7] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 8100
2025-03-22 10:17:23.991 [http-nio-8082-exec-8] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 8100
2025-03-22 10:17:23.993 [http-nio-8082-exec-8] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [查询用户信息], 入参: {"id":8100}, 请求类: UserController, 请求方法: findById =================================== 
2025-03-22 10:17:23.993 [http-nio-8082-exec-8] INFO  c.y.redbook.user.biz.service.impl.UserServiceImpl - ==> 命中了本地缓存；FindUserByIdRspDTO(id=8100, nickName=小红薯12100, avatar=null, introduction=null)
2025-03-22 10:17:23.993 [http-nio-8082-exec-8] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [查询用户信息], 耗时: 0ms, 出参: {"success":true,"message":null,"errorCode":null,"data":{"id":8100,"nickName":"小红薯12100","avatar":null,"introduction":null}} =================================== 
2025-03-22 10:17:23.994 [http-nio-8082-exec-8] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 8100
2025-03-22 10:18:07.448 [http-nio-8082-exec-9] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 8100
2025-03-22 10:18:07.449 [http-nio-8082-exec-9] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[8100,2100]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 10:18:07.451 [http-nio-8082-exec-9] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 2ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":8100,"nickName":"小红薯12100","avatar":null,"introduction":null},{"id":2100,"nickName":"研究生","avatar":"http://127.0.0.1:9000/redbook/827ddaa493c345868bd9b3434d3dbc2d.jpg","introduction":"分享生活\r\n合作：xiarui@mxbrand.net"}]} =================================== 
2025-03-22 10:18:07.451 [http-nio-8082-exec-9] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 8100
2025-03-22 10:18:08.727 [http-nio-8082-exec-10] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 8100
2025-03-22 10:18:08.728 [http-nio-8082-exec-10] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[8100]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 10:18:08.729 [http-nio-8082-exec-10] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 1ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":8100,"nickName":"小红薯12100","avatar":null,"introduction":null}]} =================================== 
2025-03-22 10:18:08.730 [http-nio-8082-exec-10] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 8100
2025-03-22 10:18:17.735 [http-nio-8082-exec-1] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 8100
2025-03-22 10:18:17.736 [http-nio-8082-exec-1] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[8100,2100]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 10:18:17.737 [http-nio-8082-exec-1] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 1ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":8100,"nickName":"小红薯12100","avatar":null,"introduction":null},{"id":2100,"nickName":"研究生","avatar":"http://127.0.0.1:9000/redbook/827ddaa493c345868bd9b3434d3dbc2d.jpg","introduction":"分享生活\r\n合作：xiarui@mxbrand.net"}]} =================================== 
2025-03-22 10:18:17.738 [http-nio-8082-exec-1] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 8100
2025-03-22 10:18:19.092 [http-nio-8082-exec-2] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 8100
2025-03-22 10:18:19.093 [http-nio-8082-exec-2] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[8100]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 10:18:19.095 [http-nio-8082-exec-2] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 2ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":8100,"nickName":"小红薯12100","avatar":null,"introduction":null}]} =================================== 
2025-03-22 10:18:19.096 [http-nio-8082-exec-2] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 8100
2025-03-22 10:18:35.753 [http-nio-8082-exec-5] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 8100
2025-03-22 10:18:35.754 [http-nio-8082-exec-5] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[8100,2100]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 10:18:35.755 [http-nio-8082-exec-5] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 1ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":8100,"nickName":"小红薯12100","avatar":null,"introduction":null},{"id":2100,"nickName":"研究生","avatar":"http://127.0.0.1:9000/redbook/827ddaa493c345868bd9b3434d3dbc2d.jpg","introduction":"分享生活\r\n合作：xiarui@mxbrand.net"}]} =================================== 
2025-03-22 10:18:35.756 [http-nio-8082-exec-5] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 8100
2025-03-22 10:20:56.630 [http-nio-8082-exec-3] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 8100
2025-03-22 10:20:56.631 [http-nio-8082-exec-3] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[8100,2100]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 10:20:56.633 [http-nio-8082-exec-3] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 2ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":8100,"nickName":"小红薯12100","avatar":null,"introduction":null},{"id":2100,"nickName":"研究生","avatar":"http://127.0.0.1:9000/redbook/827ddaa493c345868bd9b3434d3dbc2d.jpg","introduction":"分享生活\r\n合作：xiarui@mxbrand.net"}]} =================================== 
2025-03-22 10:20:56.633 [http-nio-8082-exec-3] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 8100
2025-03-22 10:23:07.367 [http-nio-8082-exec-7] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 8100
2025-03-22 10:23:07.368 [http-nio-8082-exec-7] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[8100,2100]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 10:23:07.370 [http-nio-8082-exec-7] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 2ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":8100,"nickName":"小红薯12100","avatar":null,"introduction":null},{"id":2100,"nickName":"研究生","avatar":"http://127.0.0.1:9000/redbook/827ddaa493c345868bd9b3434d3dbc2d.jpg","introduction":"分享生活\r\n合作：xiarui@mxbrand.net"}]} =================================== 
2025-03-22 10:23:07.371 [http-nio-8082-exec-7] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 8100
2025-03-22 10:23:18.266 [http-nio-8082-exec-8] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 8100
2025-03-22 10:23:18.267 [http-nio-8082-exec-8] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[8100]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 10:23:18.269 [http-nio-8082-exec-8] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 2ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":8100,"nickName":"小红薯12100","avatar":null,"introduction":null}]} =================================== 
2025-03-22 10:23:18.269 [http-nio-8082-exec-8] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 8100
2025-03-22 10:23:20.337 [http-nio-8082-exec-9] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 8100
2025-03-22 10:23:20.338 [http-nio-8082-exec-9] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[2100]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 10:23:20.341 [http-nio-8082-exec-9] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 3ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":2100,"nickName":"研究生","avatar":"http://127.0.0.1:9000/redbook/827ddaa493c345868bd9b3434d3dbc2d.jpg","introduction":"分享生活\r\n合作：xiarui@mxbrand.net"}]} =================================== 
2025-03-22 10:23:20.342 [http-nio-8082-exec-9] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 8100
2025-03-22 10:23:24.904 [http-nio-8082-exec-10] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 8100
2025-03-22 10:23:24.905 [http-nio-8082-exec-10] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[2100]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 10:23:24.906 [http-nio-8082-exec-10] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 1ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":2100,"nickName":"研究生","avatar":"http://127.0.0.1:9000/redbook/827ddaa493c345868bd9b3434d3dbc2d.jpg","introduction":"分享生活\r\n合作：xiarui@mxbrand.net"}]} =================================== 
2025-03-22 10:23:24.907 [http-nio-8082-exec-10] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 8100
2025-03-22 10:23:26.649 [http-nio-8082-exec-1] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 8100
2025-03-22 10:23:26.650 [http-nio-8082-exec-1] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [查询用户信息], 入参: {"id":8100}, 请求类: UserController, 请求方法: findById =================================== 
2025-03-22 10:23:26.650 [http-nio-8082-exec-1] INFO  c.y.redbook.user.biz.service.impl.UserServiceImpl - ==> 命中了本地缓存；FindUserByIdRspDTO(id=8100, nickName=小红薯12100, avatar=null, introduction=null)
2025-03-22 10:23:26.650 [http-nio-8082-exec-1] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [查询用户信息], 耗时: 0ms, 出参: {"success":true,"message":null,"errorCode":null,"data":{"id":8100,"nickName":"小红薯12100","avatar":null,"introduction":null}} =================================== 
2025-03-22 10:23:26.651 [http-nio-8082-exec-1] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 8100
2025-03-22 10:24:32.610 [http-nio-8082-exec-5] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 8100
2025-03-22 10:24:32.611 [http-nio-8082-exec-5] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[8100,2100]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 10:24:32.612 [http-nio-8082-exec-5] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 1ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":8100,"nickName":"小红薯12100","avatar":null,"introduction":null},{"id":2100,"nickName":"研究生","avatar":"http://127.0.0.1:9000/redbook/827ddaa493c345868bd9b3434d3dbc2d.jpg","introduction":"分享生活\r\n合作：xiarui@mxbrand.net"}]} =================================== 
2025-03-22 10:24:32.612 [http-nio-8082-exec-5] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 8100
2025-03-22 10:24:43.904 [http-nio-8082-exec-4] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 8100
2025-03-22 10:24:43.905 [http-nio-8082-exec-4] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[8100,2100]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 10:24:43.906 [http-nio-8082-exec-4] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 1ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":8100,"nickName":"小红薯12100","avatar":null,"introduction":null},{"id":2100,"nickName":"研究生","avatar":"http://127.0.0.1:9000/redbook/827ddaa493c345868bd9b3434d3dbc2d.jpg","introduction":"分享生活\r\n合作：xiarui@mxbrand.net"}]} =================================== 
2025-03-22 10:24:43.907 [http-nio-8082-exec-4] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 8100
2025-03-22 10:24:45.651 [http-nio-8082-exec-3] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 8100
2025-03-22 10:24:45.651 [http-nio-8082-exec-3] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[8100]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 10:24:45.652 [http-nio-8082-exec-3] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 1ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":8100,"nickName":"小红薯12100","avatar":null,"introduction":null}]} =================================== 
2025-03-22 10:24:45.653 [http-nio-8082-exec-3] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 8100
2025-03-22 10:24:51.090 [http-nio-8082-exec-6] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 8100
2025-03-22 10:24:51.091 [http-nio-8082-exec-6] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[2100]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 10:24:51.092 [http-nio-8082-exec-6] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 2ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":2100,"nickName":"研究生","avatar":"http://127.0.0.1:9000/redbook/827ddaa493c345868bd9b3434d3dbc2d.jpg","introduction":"分享生活\r\n合作：xiarui@mxbrand.net"}]} =================================== 
2025-03-22 10:24:51.092 [http-nio-8082-exec-6] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 8100
2025-03-22 10:24:53.202 [http-nio-8082-exec-7] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 8100
2025-03-22 10:24:53.203 [http-nio-8082-exec-7] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [查询用户信息], 入参: {"id":8100}, 请求类: UserController, 请求方法: findById =================================== 
2025-03-22 10:24:53.203 [http-nio-8082-exec-7] INFO  c.y.redbook.user.biz.service.impl.UserServiceImpl - ==> 命中了本地缓存；FindUserByIdRspDTO(id=8100, nickName=小红薯12100, avatar=null, introduction=null)
2025-03-22 10:24:53.203 [http-nio-8082-exec-7] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [查询用户信息], 耗时: 0ms, 出参: {"success":true,"message":null,"errorCode":null,"data":{"id":8100,"nickName":"小红薯12100","avatar":null,"introduction":null}} =================================== 
2025-03-22 10:24:53.203 [http-nio-8082-exec-7] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 8100
2025-03-22 10:33:04.270 [http-nio-8082-exec-9] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 8100
2025-03-22 10:33:04.270 [http-nio-8082-exec-9] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[8100]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 10:33:04.272 [http-nio-8082-exec-9] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 2ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":8100,"nickName":"小红薯12100","avatar":null,"introduction":null}]} =================================== 
2025-03-22 10:33:04.272 [http-nio-8082-exec-9] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 8100
2025-03-22 10:33:31.226 [http-nio-8082-exec-10] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 8100
2025-03-22 10:33:31.227 [http-nio-8082-exec-10] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[8100]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 10:33:31.228 [http-nio-8082-exec-10] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 2ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":8100,"nickName":"小红薯12100","avatar":null,"introduction":null}]} =================================== 
2025-03-22 10:33:31.229 [http-nio-8082-exec-10] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 8100
2025-03-22 10:33:35.822 [http-nio-8082-exec-1] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 8100
2025-03-22 10:33:35.823 [http-nio-8082-exec-1] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [查询用户信息], 入参: {"id":8100}, 请求类: UserController, 请求方法: findById =================================== 
2025-03-22 10:33:35.823 [http-nio-8082-exec-1] INFO  c.y.redbook.user.biz.service.impl.UserServiceImpl - ==> 命中了本地缓存；FindUserByIdRspDTO(id=8100, nickName=小红薯12100, avatar=null, introduction=null)
2025-03-22 10:33:35.823 [http-nio-8082-exec-1] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [查询用户信息], 耗时: 0ms, 出参: {"success":true,"message":null,"errorCode":null,"data":{"id":8100,"nickName":"小红薯12100","avatar":null,"introduction":null}} =================================== 
2025-03-22 10:33:35.823 [http-nio-8082-exec-1] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 8100
2025-03-22 10:34:56.310 [http-nio-8082-exec-5] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 8100
2025-03-22 10:34:56.311 [http-nio-8082-exec-5] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[8100]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 10:34:56.312 [http-nio-8082-exec-5] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 1ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":8100,"nickName":"小红薯12100","avatar":null,"introduction":null}]} =================================== 
2025-03-22 10:34:56.313 [http-nio-8082-exec-5] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 8100
2025-03-22 10:34:57.432 [http-nio-8082-exec-4] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 8100
2025-03-22 10:34:57.433 [http-nio-8082-exec-4] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[8100]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 10:34:57.434 [http-nio-8082-exec-4] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 1ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":8100,"nickName":"小红薯12100","avatar":null,"introduction":null}]} =================================== 
2025-03-22 10:34:57.435 [http-nio-8082-exec-4] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 8100
2025-03-22 10:35:39.551 [http-nio-8082-exec-3] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 8100
2025-03-22 10:35:39.552 [http-nio-8082-exec-3] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[8100]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 10:35:39.553 [http-nio-8082-exec-3] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 1ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":8100,"nickName":"小红薯12100","avatar":null,"introduction":null}]} =================================== 
2025-03-22 10:35:39.554 [http-nio-8082-exec-3] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 8100
2025-03-22 10:35:40.769 [http-nio-8082-exec-6] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 8100
2025-03-22 10:35:40.769 [http-nio-8082-exec-6] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[8100]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 10:35:40.770 [http-nio-8082-exec-6] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 1ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":8100,"nickName":"小红薯12100","avatar":null,"introduction":null}]} =================================== 
2025-03-22 10:35:40.771 [http-nio-8082-exec-6] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 8100
2025-03-22 10:35:46.665 [http-nio-8082-exec-7] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 8100
2025-03-22 10:35:46.666 [http-nio-8082-exec-7] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[8100]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 10:35:46.668 [http-nio-8082-exec-7] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 2ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":8100,"nickName":"小红薯12100","avatar":null,"introduction":null}]} =================================== 
2025-03-22 10:35:46.668 [http-nio-8082-exec-7] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 8100
2025-03-22 10:41:34.300 [http-nio-8082-exec-9] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 6101
2025-03-22 10:41:34.300 [http-nio-8082-exec-9] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [查询用户信息], 入参: {"id":68}, 请求类: UserController, 请求方法: findById =================================== 
2025-03-22 10:41:34.307 [http-nio-8082-exec-9] DEBUG c.y.r.u.b.d.mapper.UserDOMapper.selectByPrimaryKey - ==>  Preparing: select id, redbook_id, `password`, nickname, avatar, birthday, background_img, email, sex, `status`, introduction, create_time, update_time, is_deleted from t_user where id = ?
2025-03-22 10:41:34.307 [http-nio-8082-exec-9] DEBUG c.y.r.u.b.d.mapper.UserDOMapper.selectByPrimaryKey - ==> Parameters: 68(Long)
2025-03-22 10:41:34.308 [http-nio-8082-exec-9] DEBUG c.y.r.u.b.d.mapper.UserDOMapper.selectByPrimaryKey - <==      Total: 0
2025-03-22 10:41:34.311 [http-nio-8082-exec-9] WARN  c.y.r.user.biz.exception.GlobalExceptionHandler - /user/findById request fail, errorCode: USER-20007, errorMessage: 该用户不存在
2025-03-22 10:41:34.312 [http-nio-8082-exec-9] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 6101
2025-03-22 10:42:07.026 [http-nio-8082-exec-10] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 6101
2025-03-22 10:42:07.027 [http-nio-8082-exec-10] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [查询用户信息], 入参: {"id":28}, 请求类: UserController, 请求方法: findById =================================== 
2025-03-22 10:42:07.028 [http-nio-8082-exec-10] DEBUG c.y.r.u.b.d.mapper.UserDOMapper.selectByPrimaryKey - ==>  Preparing: select id, redbook_id, `password`, nickname, avatar, birthday, background_img, email, sex, `status`, introduction, create_time, update_time, is_deleted from t_user where id = ?
2025-03-22 10:42:07.029 [http-nio-8082-exec-10] DEBUG c.y.r.u.b.d.mapper.UserDOMapper.selectByPrimaryKey - ==> Parameters: 28(Long)
2025-03-22 10:42:07.030 [http-nio-8082-exec-10] DEBUG c.y.r.u.b.d.mapper.UserDOMapper.selectByPrimaryKey - <==      Total: 1
2025-03-22 10:42:07.030 [http-nio-8082-exec-10] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [查询用户信息], 耗时: 3ms, 出参: {"success":true,"message":null,"errorCode":null,"data":{"id":28,"nickName":"小红薯10100","avatar":null,"introduction":null}} =================================== 
2025-03-22 10:42:07.031 [http-nio-8082-exec-10] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 6101
2025-03-22 10:42:32.599 [http-nio-8082-exec-1] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 6101
2025-03-22 10:42:32.600 [http-nio-8082-exec-1] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [查询用户信息], 入参: {"id":28}, 请求类: UserController, 请求方法: findById =================================== 
2025-03-22 10:42:32.601 [http-nio-8082-exec-1] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [查询用户信息], 耗时: 1ms, 出参: {"success":true,"message":null,"errorCode":null,"data":{"id":28,"nickName":"小红薯10100","avatar":null,"introduction":null}} =================================== 
2025-03-22 10:42:32.602 [http-nio-8082-exec-1] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 6101
2025-03-22 10:42:52.141 [http-nio-8082-exec-2] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 6101
2025-03-22 10:42:52.141 [http-nio-8082-exec-2] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [查询用户信息], 入参: {"id":21}, 请求类: UserController, 请求方法: findById =================================== 
2025-03-22 10:42:52.142 [http-nio-8082-exec-2] DEBUG c.y.r.u.b.d.mapper.UserDOMapper.selectByPrimaryKey - ==>  Preparing: select id, redbook_id, `password`, nickname, avatar, birthday, background_img, email, sex, `status`, introduction, create_time, update_time, is_deleted from t_user where id = ?
2025-03-22 10:42:52.143 [http-nio-8082-exec-2] DEBUG c.y.r.u.b.d.mapper.UserDOMapper.selectByPrimaryKey - ==> Parameters: 21(Long)
2025-03-22 10:42:52.144 [http-nio-8082-exec-2] DEBUG c.y.r.u.b.d.mapper.UserDOMapper.selectByPrimaryKey - <==      Total: 0
2025-03-22 10:42:52.144 [http-nio-8082-exec-2] WARN  c.y.r.user.biz.exception.GlobalExceptionHandler - /user/findById request fail, errorCode: USER-20007, errorMessage: 该用户不存在
2025-03-22 10:42:52.144 [http-nio-8082-exec-2] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 6101
2025-03-22 10:43:07.752 [http-nio-8082-exec-5] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 6101
2025-03-22 10:43:07.752 [http-nio-8082-exec-5] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [查询用户信息], 入参: {"id":24}, 请求类: UserController, 请求方法: findById =================================== 
2025-03-22 10:43:07.753 [http-nio-8082-exec-5] DEBUG c.y.r.u.b.d.mapper.UserDOMapper.selectByPrimaryKey - ==>  Preparing: select id, redbook_id, `password`, nickname, avatar, birthday, background_img, email, sex, `status`, introduction, create_time, update_time, is_deleted from t_user where id = ?
2025-03-22 10:43:07.754 [http-nio-8082-exec-5] DEBUG c.y.r.u.b.d.mapper.UserDOMapper.selectByPrimaryKey - ==> Parameters: 24(Long)
2025-03-22 10:43:07.755 [http-nio-8082-exec-5] DEBUG c.y.r.u.b.d.mapper.UserDOMapper.selectByPrimaryKey - <==      Total: 1
2025-03-22 10:43:07.755 [http-nio-8082-exec-5] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [查询用户信息], 耗时: 3ms, 出参: {"success":true,"message":null,"errorCode":null,"data":{"id":24,"nickName":"小红薯10023","avatar":null,"introduction":null}} =================================== 
2025-03-22 10:43:07.756 [http-nio-8082-exec-5] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 6101
2025-03-22 11:30:50.515 [http-nio-8082-exec-3] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 6101
2025-03-22 11:30:50.520 [http-nio-8082-exec-3] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [查询用户信息], 入参: {"id":24}, 请求类: UserController, 请求方法: findById =================================== 
2025-03-22 11:30:50.523 [http-nio-8082-exec-3] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [查询用户信息], 耗时: 2ms, 出参: {"success":true,"message":null,"errorCode":null,"data":{"id":24,"nickName":"小红薯10023","avatar":null,"introduction":null}} =================================== 
2025-03-22 11:30:50.524 [http-nio-8082-exec-3] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 6101
2025-03-22 11:36:12.627 [http-nio-8082-exec-7] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 8100
2025-03-22 11:36:12.630 [http-nio-8082-exec-7] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[8100]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 11:36:12.632 [http-nio-8082-exec-7] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 2ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":8100,"nickName":"小红薯12100","avatar":null,"introduction":null}]} =================================== 
2025-03-22 11:36:12.633 [http-nio-8082-exec-7] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 8100
2025-03-22 12:31:08.586 [Thread-7] WARN  com.alibaba.nacos.common.notify.NotifyCenter - [NotifyCenter] Start destroying Publisher
2025-03-22 12:31:08.586 [Thread-10] WARN  c.alibaba.nacos.common.http.HttpClientBeanHolder - [HttpClientBeanHolder] Start destroying common HttpClient
2025-03-22 12:31:08.586 [Thread-7] WARN  com.alibaba.nacos.common.notify.NotifyCenter - [NotifyCenter] Destruction of the end
2025-03-22 12:31:08.589 [Thread-10] WARN  c.alibaba.nacos.common.http.HttpClientBeanHolder - [HttpClientBeanHolder] Destruction of the end
2025-03-22 12:31:08.673 [SpringApplicationShutdownHook] INFO  c.a.cloud.nacos.registry.NacosServiceRegistry - De-registering from Nacos Server now...
2025-03-22 12:31:08.674 [SpringApplicationShutdownHook] INFO  com.alibaba.nacos.client.naming - [DEREGISTER-SERVICE] redbook deregistering service redbook-user with instance: Instance{instanceId='null', ip='10.108.20.173', port=8082, weight=1.0, healthy=true, enabled=true, ephemeral=true, clusterName='DEFAULT', serviceName='null', metadata={}}
2025-03-22 12:31:08.678 [SpringApplicationShutdownHook] INFO  c.a.cloud.nacos.registry.NacosServiceRegistry - De-registration finished.
2025-03-22 12:31:08.678 [SpringApplicationShutdownHook] INFO  com.alibaba.nacos.client.naming - com.alibaba.nacos.client.naming.cache.ServiceInfoHolder do shutdown begin
2025-03-22 12:31:08.678 [SpringApplicationShutdownHook] INFO  com.alibaba.nacos.client.naming - com.alibaba.nacos.client.naming.backups.FailoverReactor do shutdown begin
2025-03-22 12:31:08.679 [SpringApplicationShutdownHook] INFO  com.alibaba.nacos.client.naming - com.alibaba.nacos.client.naming.backups.FailoverReactor do shutdown stop
2025-03-22 12:31:08.679 [SpringApplicationShutdownHook] INFO  com.alibaba.nacos.client.naming - com.alibaba.nacos.client.naming.cache.ServiceInfoHolder do shutdown stop
2025-03-22 12:31:08.679 [SpringApplicationShutdownHook] INFO  com.alibaba.nacos.client.naming - com.alibaba.nacos.client.naming.remote.NamingClientProxyDelegate do shutdown begin
2025-03-22 12:31:08.679 [SpringApplicationShutdownHook] INFO  com.alibaba.nacos.client.naming - com.alibaba.nacos.client.naming.core.ServiceInfoUpdateService do shutdown begin
2025-03-22 12:31:08.679 [SpringApplicationShutdownHook] INFO  com.alibaba.nacos.client.naming - com.alibaba.nacos.client.naming.core.ServiceInfoUpdateService do shutdown stop
2025-03-22 12:31:08.679 [SpringApplicationShutdownHook] INFO  com.alibaba.nacos.client.naming - com.alibaba.nacos.client.naming.core.ServerListManager do shutdown begin
2025-03-22 12:31:08.679 [SpringApplicationShutdownHook] WARN  com.alibaba.nacos.client.naming - [NamingHttpClientManager] Start destroying NacosRestTemplate
2025-03-22 12:31:08.679 [SpringApplicationShutdownHook] WARN  com.alibaba.nacos.client.naming - [NamingHttpClientManager] Destruction of the end
2025-03-22 12:31:08.679 [SpringApplicationShutdownHook] INFO  com.alibaba.nacos.client.naming - com.alibaba.nacos.client.naming.core.ServerListManager do shutdown stop
2025-03-22 12:31:08.679 [SpringApplicationShutdownHook] INFO  com.alibaba.nacos.client.naming - com.alibaba.nacos.client.naming.remote.http.NamingHttpClientProxy do shutdown begin
2025-03-22 12:31:08.679 [SpringApplicationShutdownHook] WARN  com.alibaba.nacos.client.naming - [NamingHttpClientManager] Start destroying NacosRestTemplate
2025-03-22 12:31:08.679 [SpringApplicationShutdownHook] WARN  com.alibaba.nacos.client.naming - [NamingHttpClientManager] Destruction of the end
2025-03-22 12:31:08.680 [SpringApplicationShutdownHook] INFO  com.alibaba.nacos.client.naming - com.alibaba.nacos.client.naming.remote.http.NamingHttpClientProxy do shutdown stop
2025-03-22 12:31:08.680 [SpringApplicationShutdownHook] INFO  com.alibaba.nacos.common.remote.client - Shutdown rpc client, set status to shutdown
2025-03-22 12:31:08.680 [SpringApplicationShutdownHook] INFO  com.alibaba.nacos.common.remote.client - Shutdown client event executor java.util.concurrent.ScheduledThreadPoolExecutor@667a313e[Running, pool size = 2, active threads = 2, queued tasks = 0, completed tasks = 0]
2025-03-22 12:31:08.680 [SpringApplicationShutdownHook] INFO  com.alibaba.nacos.common.remote.client - Close current connection 1742606836207_172.17.0.1_37768
2025-03-22 12:31:08.681 [nacos-grpc-client-executor-127.0.0.1-2234] INFO  c.a.nacos.common.remote.client.grpc.GrpcClient - [1742606836207_172.17.0.1_37768]Ignore complete event,isRunning:false,isAbandon=false
2025-03-22 12:31:08.685 [SpringApplicationShutdownHook] INFO  c.a.nacos.common.remote.client.grpc.GrpcClient - Shutdown grpc executor java.util.concurrent.ThreadPoolExecutor@156efc6f[Running, pool size = 4, active threads = 0, queued tasks = 0, completed tasks = 2235]
2025-03-22 12:31:08.685 [SpringApplicationShutdownHook] INFO  com.alibaba.nacos.client.naming - Shutdown grpc redo service executor java.util.concurrent.ScheduledThreadPoolExecutor@5fadbe06[Running, pool size = 1, active threads = 0, queued tasks = 1, completed tasks = 3667]
2025-03-22 12:31:08.686 [SpringApplicationShutdownHook] INFO  c.a.n.client.auth.ram.identify.CredentialWatcher - [null] CredentialWatcher is stopped
2025-03-22 12:31:08.686 [SpringApplicationShutdownHook] INFO  c.a.n.client.auth.ram.identify.CredentialService - [null] CredentialService is freed
2025-03-22 12:31:08.686 [SpringApplicationShutdownHook] INFO  com.alibaba.nacos.client.naming - com.alibaba.nacos.client.naming.remote.NamingClientProxyDelegate do shutdown stop
2025-03-22 12:31:08.812 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-03-22 12:31:08.813 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-03-22 14:59:15.945 [main] WARN  com.alibaba.nacos.client.logging.NacosLogging - Load Logback Configuration of Nacos fail, message: Could not initialize Logback Nacos logging from classpath:nacos-logback.xml
2025-03-22 14:59:15.995 [main] WARN  com.alibaba.nacos.client.logging.NacosLogging - Load Logback Configuration of Nacos fail, message: Could not initialize Logback Nacos logging from classpath:nacos-logback.xml
2025-03-22 14:59:16.344 [main] WARN  com.alibaba.nacos.client.logging.NacosLogging - Load Logback Configuration of Nacos fail, message: Could not initialize Logback Nacos logging from classpath:nacos-logback.xml
2025-03-22 14:59:16.353 [main] WARN  com.alibaba.nacos.client.logging.NacosLogging - Load Logback Configuration of Nacos fail, message: Could not initialize Logback Nacos logging from classpath:nacos-logback.xml
2025-03-22 14:59:16.353 [main] INFO  c.y.redbook.user.biz.RedbookUserBizApplication - The following 1 profile is active: "dev"
2025-03-22 14:59:16.774 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-22 14:59:16.776 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-22 14:59:16.790 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2025-03-22 14:59:16.925 [main] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=a6861ec5-f64d-3258-b3cc-6d969a327b3c
2025-03-22 14:59:16.945 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.yeyang.redbook.oss.api.FileFeignApi' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-03-22 14:59:16.945 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.yeyang.redbook.user.api.UserFeignApi' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-03-22 14:59:16.946 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.yeyang.redbook.distributed.id.generator.api.DistributedIdGeneratorFeignApi' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-03-22 14:59:17.304 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8082 (http)
2025-03-22 14:59:17.311 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-03-22 14:59:17.311 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.5]
2025-03-22 14:59:17.381 [main] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-03-22 14:59:17.381 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1015 ms
2025-03-22 14:59:17.483 [main] INFO  c.a.d.s.b.a.DruidDataSourceAutoConfigure - Init DruidDataSource
2025-03-22 14:59:17.669 [main] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-03-22 14:59:17.892 [main] INFO  o.s.cloud.openfeign.FeignClientFactoryBean - For 'redbook-oss' URL not provided. Will try picking an instance via load-balancing.
2025-03-22 14:59:18.096 [main] INFO  o.s.cloud.openfeign.FeignClientFactoryBean - For 'redbook-distributed-id-generator' URL not provided. Will try picking an instance via load-balancing.
2025-03-22 14:59:18.662 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8082 (http) with context path ''
2025-03-22 14:59:18.667 [main] WARN  com.alibaba.nacos.client.logging.NacosLogging - Load Logback Configuration of Nacos fail, message: Could not initialize Logback Nacos logging from classpath:nacos-logback.xml
2025-03-22 14:59:18.667 [main] INFO  com.alibaba.nacos.client.naming - initializer namespace from ans.namespace attribute : null
2025-03-22 14:59:18.667 [main] INFO  com.alibaba.nacos.client.naming - initializer namespace from ALIBABA_ALIWARE_NAMESPACE attribute :null
2025-03-22 14:59:18.668 [main] INFO  com.alibaba.nacos.client.naming - initializer namespace from namespace attribute :null
2025-03-22 14:59:18.685 [main] INFO  com.alibaba.nacos.client.utils.ParamUtil - [settings] [req-serv] nacos-server port:8848
2025-03-22 14:59:18.685 [main] INFO  com.alibaba.nacos.client.utils.ParamUtil - [settings] [http-client] connect timeout:1000
2025-03-22 14:59:18.685 [main] INFO  com.alibaba.nacos.client.utils.ParamUtil - PER_TASK_CONFIG_SIZE: 3000.0
2025-03-22 14:59:18.688 [main] INFO  c.a.n.p.auth.spi.client.ClientAuthPluginManager - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
2025-03-22 14:59:18.688 [main] INFO  c.a.n.p.auth.spi.client.ClientAuthPluginManager - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
2025-03-22 14:59:18.690 [main] INFO  c.a.n.client.auth.ram.identify.CredentialWatcher - null No credential found
2025-03-22 14:59:18.696 [main] INFO  com.alibaba.nacos.common.remote.client - [RpcClientFactory] create a new rpc client of 4f46cf29-7551-4a63-9f5e-a7cb75666573
2025-03-22 14:59:18.710 [main] INFO  com.alibaba.nacos.common.remote.client - [4f46cf29-7551-4a63-9f5e-a7cb75666573] RpcClient init, ServerListFactory = com.alibaba.nacos.client.naming.core.ServerListManager
2025-03-22 14:59:18.710 [main] INFO  com.alibaba.nacos.common.remote.client - [4f46cf29-7551-4a63-9f5e-a7cb75666573] Registry connection listener to current client:com.alibaba.nacos.client.naming.remote.gprc.redo.NamingGrpcRedoService
2025-03-22 14:59:18.710 [main] INFO  com.alibaba.nacos.common.remote.client - [4f46cf29-7551-4a63-9f5e-a7cb75666573] Register server push request handler:com.alibaba.nacos.client.naming.remote.gprc.NamingPushRequestHandler
2025-03-22 14:59:18.712 [main] INFO  com.alibaba.nacos.common.remote.client - [4f46cf29-7551-4a63-9f5e-a7cb75666573] Try to connect to server on start up, server: {serverIp = '127.0.0.1', server main port = 8848}
2025-03-22 14:59:18.730 [main] INFO  c.a.nacos.common.remote.client.grpc.GrpcClient - grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2025-03-22 14:59:19.379 [main] INFO  com.alibaba.nacos.common.remote.client - [4f46cf29-7551-4a63-9f5e-a7cb75666573] Success to connect to server [127.0.0.1:8848] on start up, connectionId = 1742626759222_172.17.0.1_34752
2025-03-22 14:59:19.380 [com.alibaba.nacos.client.remote.worker] INFO  com.alibaba.nacos.common.remote.client - [4f46cf29-7551-4a63-9f5e-a7cb75666573] Notify connected event to listeners.
2025-03-22 14:59:19.380 [com.alibaba.nacos.client.remote.worker] INFO  com.alibaba.nacos.client.naming - Grpc connection connect
2025-03-22 14:59:19.380 [main] INFO  com.alibaba.nacos.common.remote.client - [4f46cf29-7551-4a63-9f5e-a7cb75666573] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$ConnectResetRequestHandler
2025-03-22 14:59:19.380 [main] INFO  com.alibaba.nacos.common.remote.client - [4f46cf29-7551-4a63-9f5e-a7cb75666573] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$$Lambda$1260/0x0000021bd49258d8
2025-03-22 14:59:19.381 [main] INFO  com.alibaba.nacos.client.naming - [REGISTER-SERVICE] redbook registering service redbook-user with instance Instance{instanceId='null', ip='10.108.20.173', port=8082, weight=1.0, healthy=true, enabled=true, ephemeral=true, clusterName='DEFAULT', serviceName='null', metadata={IPv6=[2001:da8:204:1081:0:2ea3:f013:4e5b], preserved.register.source=SPRING_CLOUD}}
2025-03-22 14:59:19.393 [main] INFO  c.a.cloud.nacos.registry.NacosServiceRegistry - nacos registry, DEFAULT_GROUP redbook-user 10.108.20.173:8082 register finished
2025-03-22 14:59:19.519 [main] INFO  c.y.redbook.user.biz.RedbookUserBizApplication - Started RedbookUserBizApplication in 4.072 seconds (process running for 4.425)
2025-03-22 14:59:19.519 [main] INFO  c.y.r.u.biz.runner.PushRolePermissions2RedisRunner - ==> 服务启动，开始同步角色权限数据到 Redis 中...
2025-03-22 14:59:19.854 [main] DEBUG c.y.r.u.b.d.mapper.RoleDOMapper.selectEnabledList - ==>  Preparing: select id, role_key, role_name from t_role where status = 0 and is_deleted = 0
2025-03-22 14:59:20.012 [main] DEBUG c.y.r.u.b.d.mapper.RoleDOMapper.selectEnabledList - ==> Parameters: 
2025-03-22 14:59:20.029 [main] DEBUG c.y.r.u.b.d.mapper.RoleDOMapper.selectEnabledList - <==      Total: 1
2025-03-22 14:59:20.044 [main] DEBUG c.y.r.u.b.d.m.R.selectByRoleIds - ==>  Preparing: select role_id, permission_id from t_role_permission_rel where role_id in ( ? )
2025-03-22 14:59:20.046 [main] DEBUG c.y.r.u.b.d.m.R.selectByRoleIds - ==> Parameters: 1(Long)
2025-03-22 14:59:20.049 [main] DEBUG c.y.r.u.b.d.m.R.selectByRoleIds - <==      Total: 2
2025-03-22 14:59:20.050 [main] DEBUG c.y.r.u.b.d.m.P.selectAppEnabledList - ==>  Preparing: select id, name, permission_key from t_permission where status = 0 and type = 3 and is_deleted = 0
2025-03-22 14:59:20.050 [main] DEBUG c.y.r.u.b.d.m.P.selectAppEnabledList - ==> Parameters: 
2025-03-22 14:59:20.053 [main] DEBUG c.y.r.u.b.d.m.P.selectAppEnabledList - <==      Total: 3
2025-03-22 14:59:20.064 [main] INFO  c.y.r.u.biz.runner.PushRolePermissions2RedisRunner - ==> 服务启动，成功同步角色权限数据到 Redis 中...
2025-03-22 15:02:21.215 [http-nio-8082-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-22 15:02:21.215 [http-nio-8082-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-03-22 15:02:21.216 [http-nio-8082-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-03-22 15:02:21.224 [http-nio-8082-exec-1] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 4100
2025-03-22 15:02:21.282 [http-nio-8082-exec-1] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [查询用户信息], 入参: {"id":111}, 请求类: UserController, 请求方法: findById =================================== 
2025-03-22 15:02:21.286 [http-nio-8082-exec-1] DEBUG c.y.r.u.b.d.mapper.UserDOMapper.selectByPrimaryKey - ==>  Preparing: select id, redbook_id, `password`, nickname, avatar, birthday, background_img, email, sex, `status`, introduction, create_time, update_time, is_deleted from t_user where id = ?
2025-03-22 15:02:21.287 [http-nio-8082-exec-1] DEBUG c.y.r.u.b.d.mapper.UserDOMapper.selectByPrimaryKey - ==> Parameters: 111(Long)
2025-03-22 15:02:21.291 [http-nio-8082-exec-1] DEBUG c.y.r.u.b.d.mapper.UserDOMapper.selectByPrimaryKey - <==      Total: 0
2025-03-22 15:02:21.294 [http-nio-8082-exec-1] WARN  c.y.r.user.biz.exception.GlobalExceptionHandler - /user/findById request fail, errorCode: USER-20007, errorMessage: 该用户不存在
2025-03-22 15:02:21.303 [http-nio-8082-exec-1] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 4100
2025-03-22 15:02:42.881 [http-nio-8082-exec-2] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 4100
2025-03-22 15:02:42.882 [http-nio-8082-exec-2] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [查询用户信息], 入参: {"id":1}, 请求类: UserController, 请求方法: findById =================================== 
2025-03-22 15:02:42.884 [http-nio-8082-exec-2] DEBUG c.y.r.u.b.d.mapper.UserDOMapper.selectByPrimaryKey - ==>  Preparing: select id, redbook_id, `password`, nickname, avatar, birthday, background_img, email, sex, `status`, introduction, create_time, update_time, is_deleted from t_user where id = ?
2025-03-22 15:02:42.884 [http-nio-8082-exec-2] DEBUG c.y.r.u.b.d.mapper.UserDOMapper.selectByPrimaryKey - ==> Parameters: 1(Long)
2025-03-22 15:02:42.895 [http-nio-8082-exec-2] DEBUG c.y.r.u.b.d.mapper.UserDOMapper.selectByPrimaryKey - <==      Total: 1
2025-03-22 15:02:42.896 [http-nio-8082-exec-2] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [查询用户信息], 耗时: 13ms, 出参: {"success":true,"message":null,"errorCode":null,"data":{"id":1,"nickName":"小红薯1","avatar":null,"introduction":null}} =================================== 
2025-03-22 15:02:42.899 [http-nio-8082-exec-2] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 4100
2025-03-22 15:03:09.149 [http-nio-8082-exec-7] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 4100
2025-03-22 15:03:09.151 [http-nio-8082-exec-7] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [查询用户信息], 入参: {"id":1}, 请求类: UserController, 请求方法: findById =================================== 
2025-03-22 15:03:09.156 [http-nio-8082-exec-7] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [查询用户信息], 耗时: 5ms, 出参: {"success":true,"message":null,"errorCode":null,"data":{"id":1,"nickName":"小红薯1","avatar":null,"introduction":null}} =================================== 
2025-03-22 15:03:09.157 [http-nio-8082-exec-7] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 4100
2025-03-22 15:20:56.205 [http-nio-8082-exec-5] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 8100
2025-03-22 15:20:56.210 [http-nio-8082-exec-5] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[8100]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 15:20:56.215 [http-nio-8082-exec-5] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 6ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":8100,"nickName":"小红薯12100","avatar":null,"introduction":null}]} =================================== 
2025-03-22 15:20:56.216 [http-nio-8082-exec-5] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 8100
2025-03-22 15:21:04.264 [http-nio-8082-exec-6] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 8100
2025-03-22 15:21:04.265 [http-nio-8082-exec-6] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[8100]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 15:21:04.267 [http-nio-8082-exec-6] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 2ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":8100,"nickName":"小红薯12100","avatar":null,"introduction":null}]} =================================== 
2025-03-22 15:21:04.267 [http-nio-8082-exec-6] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 8100
2025-03-22 15:21:14.562 [http-nio-8082-exec-3] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 8100
2025-03-22 15:21:14.562 [http-nio-8082-exec-3] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[8100]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 15:21:14.564 [http-nio-8082-exec-3] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 2ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":8100,"nickName":"小红薯12100","avatar":null,"introduction":null}]} =================================== 
2025-03-22 15:21:14.564 [http-nio-8082-exec-3] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 8100
2025-03-22 15:22:00.337 [http-nio-8082-exec-10] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [用户注册], 入参: {"email":"chinaanhuicsy@icloud.com"}, 请求类: UserController, 请求方法: register =================================== 
2025-03-22 15:22:00.346 [http-nio-8082-exec-10] DEBUG c.y.r.u.b.domain.mapper.UserDOMapper.selectByEmail - ==>  Preparing: select id, password from t_user where email = ?
2025-03-22 15:22:00.346 [http-nio-8082-exec-10] DEBUG c.y.r.u.b.domain.mapper.UserDOMapper.selectByEmail - ==> Parameters: chinaanhuicsy@icloud.com(String)
2025-03-22 15:22:00.348 [http-nio-8082-exec-10] DEBUG c.y.r.u.b.domain.mapper.UserDOMapper.selectByEmail - <==      Total: 1
2025-03-22 15:22:00.350 [http-nio-8082-exec-10] INFO  c.y.redbook.user.biz.service.impl.UserServiceImpl - ==> 用户是否注册, email: chinaanhuicsy@icloud.com, userDO: {"id":6101,"redbookId":null,"password":"$2a$10$qzYjnDnSb8VzEqNE7azGy.yD061rRWnzNQzduZcXQjV4iprv/Ie6m","nickname":null,"avatar":null,"birthday":null,"backgroundImg":null,"email":null,"sex":null,"status":null,"introduction":null,"createTime":null,"updateTime":null,"isDeleted":null}
2025-03-22 15:22:00.351 [http-nio-8082-exec-10] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [用户注册], 耗时: 14ms, 出参: {"success":true,"message":null,"errorCode":null,"data":6101} =================================== 
2025-03-22 15:22:00.404 [http-nio-8082-exec-9] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 6101
2025-03-22 15:22:00.404 [http-nio-8082-exec-9] DEBUG c.y.r.u.b.d.mapper.UserDOMapper.selectByPrimaryKey - ==>  Preparing: select id, redbook_id, `password`, nickname, avatar, birthday, background_img, email, sex, `status`, introduction, create_time, update_time, is_deleted from t_user where id = ?
2025-03-22 15:22:00.405 [http-nio-8082-exec-9] DEBUG c.y.r.u.b.d.mapper.UserDOMapper.selectByPrimaryKey - ==> Parameters: 6101(Long)
2025-03-22 15:22:00.406 [http-nio-8082-exec-9] DEBUG c.y.r.u.b.d.mapper.UserDOMapper.selectByPrimaryKey - <==      Total: 1
2025-03-22 15:22:00.408 [http-nio-8082-exec-9] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 6101
2025-03-22 15:22:12.946 [http-nio-8082-exec-4] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 6101
2025-03-22 15:22:12.947 [http-nio-8082-exec-4] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[8100]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 15:22:12.948 [http-nio-8082-exec-4] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 2ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":8100,"nickName":"小红薯12100","avatar":null,"introduction":null}]} =================================== 
2025-03-22 15:22:12.949 [http-nio-8082-exec-4] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 6101
2025-03-22 15:23:26.659 [http-nio-8082-exec-8] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 6101
2025-03-22 15:23:26.660 [http-nio-8082-exec-8] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[8100]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 15:23:26.662 [http-nio-8082-exec-8] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 1ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":8100,"nickName":"小红薯12100","avatar":null,"introduction":null}]} =================================== 
2025-03-22 15:23:26.662 [http-nio-8082-exec-8] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 6101
2025-03-22 15:23:27.474 [http-nio-8082-exec-5] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 6101
2025-03-22 15:23:27.475 [http-nio-8082-exec-5] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[8100]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 15:23:27.476 [http-nio-8082-exec-5] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 1ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":8100,"nickName":"小红薯12100","avatar":null,"introduction":null}]} =================================== 
2025-03-22 15:23:27.477 [http-nio-8082-exec-5] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 6101
2025-03-22 15:23:29.966 [http-nio-8082-exec-6] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 6101
2025-03-22 15:23:29.967 [http-nio-8082-exec-6] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[8100]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 15:23:29.969 [http-nio-8082-exec-6] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 2ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":8100,"nickName":"小红薯12100","avatar":null,"introduction":null}]} =================================== 
2025-03-22 15:23:29.970 [http-nio-8082-exec-6] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 6101
2025-03-22 15:23:55.375 [http-nio-8082-exec-3] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 6101
2025-03-22 15:23:55.376 [http-nio-8082-exec-3] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[6101,8100]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 15:23:55.378 [http-nio-8082-exec-3] DEBUG c.y.r.u.biz.domain.mapper.UserDOMapper.selectByIds - ==>  Preparing: select id, nickname, avatar, introduction from t_user where status = 0 and is_deleted = 0 and id in ( ? )
2025-03-22 15:23:55.378 [http-nio-8082-exec-3] DEBUG c.y.r.u.biz.domain.mapper.UserDOMapper.selectByIds - ==> Parameters: 6101(Long)
2025-03-22 15:23:55.379 [http-nio-8082-exec-3] DEBUG c.y.r.u.biz.domain.mapper.UserDOMapper.selectByIds - <==      Total: 1
2025-03-22 15:23:55.380 [http-nio-8082-exec-3] ERROR c.y.r.user.biz.exception.GlobalExceptionHandler - /user/findByIds request error, 
java.lang.UnsupportedOperationException: null
	at java.base/java.util.ImmutableCollections.uoe(ImmutableCollections.java:142)
	at java.base/java.util.ImmutableCollections$AbstractImmutableCollection.addAll(ImmutableCollections.java:148)
	at com.yeyang.redbook.user.biz.service.impl.UserServiceImpl.findByIds(UserServiceImpl.java:469)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:699)
	at com.yeyang.redbook.user.biz.service.impl.UserServiceImpl$$SpringCGLIB$$0.findByIds(<generated>)
	at com.yeyang.redbook.user.biz.controller.UserController.findByIds(UserController.java:85)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.yeyang.framework.biz.operationlog.aspect.ApiOperationLogAspect.doAround(ApiOperationLogAspect.java:53)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:623)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:173)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.yeyang.redbook.user.biz.controller.UserController$$SpringCGLIB$$0.findByIds(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:547)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:614)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at com.yeyang.framework.biz.context.filter.HeaderUserId2ContextFilter.doFilterInternal(HeaderUserId2ContextFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at com.alibaba.druid.support.jakarta.WebStatFilter.doFilter(WebStatFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:859)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1734)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-03-22 15:23:55.382 [http-nio-8082-exec-3] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 6101
2025-03-22 15:23:56.684 [http-nio-8082-exec-10] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 6101
2025-03-22 15:23:56.685 [http-nio-8082-exec-10] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[6101,8100]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 15:23:56.686 [http-nio-8082-exec-10] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 1ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":6101,"nickName":"小红薯10101","avatar":null,"introduction":null},{"id":8100,"nickName":"小红薯12100","avatar":null,"introduction":null}]} =================================== 
2025-03-22 15:23:56.687 [http-nio-8082-exec-10] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 6101
2025-03-22 15:23:58.595 [http-nio-8082-exec-9] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 6101
2025-03-22 15:23:58.596 [http-nio-8082-exec-9] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [查询用户信息], 入参: {"id":6101}, 请求类: UserController, 请求方法: findById =================================== 
2025-03-22 15:23:58.598 [http-nio-8082-exec-9] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [查询用户信息], 耗时: 2ms, 出参: {"success":true,"message":null,"errorCode":null,"data":{"id":6101,"nickName":"小红薯10101","avatar":null,"introduction":null}} =================================== 
2025-03-22 15:23:58.599 [http-nio-8082-exec-9] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 6101
2025-03-22 15:26:45.139 [http-nio-8082-exec-1] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 6101
2025-03-22 15:26:45.140 [http-nio-8082-exec-1] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[6101,8100]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 15:26:45.141 [http-nio-8082-exec-1] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 1ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":6101,"nickName":"小红薯10101","avatar":null,"introduction":null},{"id":8100,"nickName":"小红薯12100","avatar":null,"introduction":null}]} =================================== 
2025-03-22 15:26:45.142 [http-nio-8082-exec-1] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 6101
2025-03-22 15:26:47.989 [http-nio-8082-exec-2] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 6101
2025-03-22 15:26:47.990 [http-nio-8082-exec-2] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[6101,8100]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 15:26:47.992 [http-nio-8082-exec-2] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 3ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":6101,"nickName":"小红薯10101","avatar":null,"introduction":null},{"id":8100,"nickName":"小红薯12100","avatar":null,"introduction":null}]} =================================== 
2025-03-22 15:26:47.993 [http-nio-8082-exec-2] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 6101
2025-03-22 15:26:50.554 [http-nio-8082-exec-7] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 6101
2025-03-22 15:26:50.555 [http-nio-8082-exec-7] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[6101,8100]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 15:26:50.557 [http-nio-8082-exec-7] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 1ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":6101,"nickName":"小红薯10101","avatar":null,"introduction":null},{"id":8100,"nickName":"小红薯12100","avatar":null,"introduction":null}]} =================================== 
2025-03-22 15:26:50.557 [http-nio-8082-exec-7] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 6101
2025-03-22 15:27:01.186 [http-nio-8082-exec-8] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 6101
2025-03-22 15:27:01.187 [http-nio-8082-exec-8] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[6101,8100]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 15:27:01.188 [http-nio-8082-exec-8] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 1ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":6101,"nickName":"小红薯10101","avatar":null,"introduction":null},{"id":8100,"nickName":"小红薯12100","avatar":null,"introduction":null}]} =================================== 
2025-03-22 15:27:01.188 [http-nio-8082-exec-8] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 6101
2025-03-22 15:27:04.268 [http-nio-8082-exec-5] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 6101
2025-03-22 15:27:04.269 [http-nio-8082-exec-5] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[6101,8100]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 15:27:04.270 [http-nio-8082-exec-5] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 1ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":6101,"nickName":"小红薯10101","avatar":null,"introduction":null},{"id":8100,"nickName":"小红薯12100","avatar":null,"introduction":null}]} =================================== 
2025-03-22 15:27:04.270 [http-nio-8082-exec-5] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 6101
2025-03-22 15:27:08.089 [http-nio-8082-exec-6] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 6101
2025-03-22 15:27:08.090 [http-nio-8082-exec-6] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[6101,8100]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 15:27:08.092 [http-nio-8082-exec-6] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 2ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":6101,"nickName":"小红薯10101","avatar":null,"introduction":null},{"id":8100,"nickName":"小红薯12100","avatar":null,"introduction":null}]} =================================== 
2025-03-22 15:27:08.093 [http-nio-8082-exec-6] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 6101
2025-03-22 15:27:23.599 [http-nio-8082-exec-3] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 6101
2025-03-22 15:27:23.600 [http-nio-8082-exec-3] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[6101,8100]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 15:27:23.602 [http-nio-8082-exec-3] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 2ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":6101,"nickName":"小红薯10101","avatar":null,"introduction":null},{"id":8100,"nickName":"小红薯12100","avatar":null,"introduction":null}]} =================================== 
2025-03-22 15:27:23.603 [http-nio-8082-exec-3] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 6101
2025-03-22 15:27:28.250 [http-nio-8082-exec-10] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 6101
2025-03-22 15:27:28.251 [http-nio-8082-exec-10] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[6101,8100]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 15:27:28.252 [http-nio-8082-exec-10] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 1ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":6101,"nickName":"小红薯10101","avatar":null,"introduction":null},{"id":8100,"nickName":"小红薯12100","avatar":null,"introduction":null}]} =================================== 
2025-03-22 15:27:28.253 [http-nio-8082-exec-10] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 6101
2025-03-22 15:27:30.009 [http-nio-8082-exec-9] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 6101
2025-03-22 15:27:30.010 [http-nio-8082-exec-9] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[6101,8100]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 15:27:30.011 [http-nio-8082-exec-9] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 2ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":6101,"nickName":"小红薯10101","avatar":null,"introduction":null},{"id":8100,"nickName":"小红薯12100","avatar":null,"introduction":null}]} =================================== 
2025-03-22 15:27:30.012 [http-nio-8082-exec-9] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 6101
2025-03-22 15:27:31.539 [http-nio-8082-exec-4] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 6101
2025-03-22 15:27:31.540 [http-nio-8082-exec-4] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[6101,8100]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 15:27:31.541 [http-nio-8082-exec-4] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 1ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":6101,"nickName":"小红薯10101","avatar":null,"introduction":null},{"id":8100,"nickName":"小红薯12100","avatar":null,"introduction":null}]} =================================== 
2025-03-22 15:27:31.542 [http-nio-8082-exec-4] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 6101
2025-03-22 15:27:43.712 [http-nio-8082-exec-1] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 6101
2025-03-22 15:27:43.713 [http-nio-8082-exec-1] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[6101,8100]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 15:27:43.714 [http-nio-8082-exec-1] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 1ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":6101,"nickName":"小红薯10101","avatar":null,"introduction":null},{"id":8100,"nickName":"小红薯12100","avatar":null,"introduction":null}]} =================================== 
2025-03-22 15:27:43.715 [http-nio-8082-exec-1] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 6101
2025-03-22 15:57:20.336 [http-nio-8082-exec-7] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[6101,8100]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 15:57:20.338 [http-nio-8082-exec-7] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 2ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":6101,"nickName":"小红薯10101","avatar":null,"introduction":null},{"id":8100,"nickName":"小红薯12100","avatar":null,"introduction":null}]} =================================== 
2025-03-22 16:06:45.068 [http-nio-8082-exec-5] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [用户注册], 入参: {"email":"chinaanhuicsy@icloud.com"}, 请求类: UserController, 请求方法: register =================================== 
2025-03-22 16:06:45.072 [http-nio-8082-exec-5] DEBUG c.y.r.u.b.domain.mapper.UserDOMapper.selectByEmail - ==>  Preparing: select id, password from t_user where email = ?
2025-03-22 16:06:45.072 [http-nio-8082-exec-5] DEBUG c.y.r.u.b.domain.mapper.UserDOMapper.selectByEmail - ==> Parameters: chinaanhuicsy@icloud.com(String)
2025-03-22 16:06:45.073 [http-nio-8082-exec-5] DEBUG c.y.r.u.b.domain.mapper.UserDOMapper.selectByEmail - <==      Total: 1
2025-03-22 16:06:45.073 [http-nio-8082-exec-5] INFO  c.y.redbook.user.biz.service.impl.UserServiceImpl - ==> 用户是否注册, email: chinaanhuicsy@icloud.com, userDO: {"id":6101,"redbookId":null,"password":"$2a$10$qzYjnDnSb8VzEqNE7azGy.yD061rRWnzNQzduZcXQjV4iprv/Ie6m","nickname":null,"avatar":null,"birthday":null,"backgroundImg":null,"email":null,"sex":null,"status":null,"introduction":null,"createTime":null,"updateTime":null,"isDeleted":null}
2025-03-22 16:06:45.074 [http-nio-8082-exec-5] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [用户注册], 耗时: 6ms, 出参: {"success":true,"message":null,"errorCode":null,"data":6101} =================================== 
2025-03-22 16:14:44.843 [http-nio-8082-exec-3] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[6101]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 16:14:44.844 [http-nio-8082-exec-3] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 1ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":6101,"nickName":"小红薯10101","avatar":null,"introduction":null}]} =================================== 
2025-03-22 16:14:52.775 [http-nio-8082-exec-10] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[6101]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 16:14:52.777 [http-nio-8082-exec-10] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 2ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":6101,"nickName":"小红薯10101","avatar":null,"introduction":null}]} =================================== 
2025-03-22 16:15:06.249 [http-nio-8082-exec-9] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[6101]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 16:15:06.250 [http-nio-8082-exec-9] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 1ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":6101,"nickName":"小红薯10101","avatar":null,"introduction":null}]} =================================== 
2025-03-22 16:15:30.161 [http-nio-8082-exec-4] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[6101]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 16:15:30.162 [http-nio-8082-exec-4] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 1ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":6101,"nickName":"小红薯10101","avatar":null,"introduction":null}]} =================================== 
2025-03-22 16:15:31.342 [http-nio-8082-exec-1] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[6101]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 16:15:31.343 [http-nio-8082-exec-1] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 1ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":6101,"nickName":"小红薯10101","avatar":null,"introduction":null}]} =================================== 
2025-03-22 16:23:52.830 [http-nio-8082-exec-7] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[6101]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 16:23:52.831 [http-nio-8082-exec-7] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 1ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":6101,"nickName":"小红薯10101","avatar":null,"introduction":null}]} =================================== 
2025-03-22 16:23:54.827 [http-nio-8082-exec-8] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[6101]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 16:23:54.829 [http-nio-8082-exec-8] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 2ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":6101,"nickName":"小红薯10101","avatar":null,"introduction":null}]} =================================== 
2025-03-22 16:24:02.431 [http-nio-8082-exec-5] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[6101]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 16:24:02.432 [http-nio-8082-exec-5] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 1ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":6101,"nickName":"小红薯10101","avatar":null,"introduction":null}]} =================================== 
2025-03-22 16:24:04.007 [http-nio-8082-exec-6] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[6101]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 16:24:04.009 [http-nio-8082-exec-6] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 2ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":6101,"nickName":"小红薯10101","avatar":null,"introduction":null}]} =================================== 
2025-03-22 16:48:26.146 [http-nio-8082-exec-10] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[6101]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 16:48:26.148 [http-nio-8082-exec-10] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 2ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":6101,"nickName":"小红薯10101","avatar":null,"introduction":null}]} =================================== 
2025-03-22 16:48:51.422 [http-nio-8082-exec-9] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[6101]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 16:48:51.424 [http-nio-8082-exec-9] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 2ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":6101,"nickName":"小红薯10101","avatar":null,"introduction":null}]} =================================== 
2025-03-22 16:52:06.204 [http-nio-8082-exec-1] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[6101]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 16:52:06.205 [http-nio-8082-exec-1] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 1ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":6101,"nickName":"小红薯10101","avatar":null,"introduction":null}]} =================================== 
2025-03-22 16:53:24.588 [http-nio-8082-exec-7] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[6101]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 16:53:24.590 [http-nio-8082-exec-7] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 2ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":6101,"nickName":"小红薯10101","avatar":null,"introduction":null}]} =================================== 
2025-03-22 16:53:29.426 [http-nio-8082-exec-8] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[6101]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 16:53:29.427 [http-nio-8082-exec-8] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 1ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":6101,"nickName":"小红薯10101","avatar":null,"introduction":null}]} =================================== 
2025-03-22 16:53:42.341 [http-nio-8082-exec-5] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[6101]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 16:53:42.343 [http-nio-8082-exec-5] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 2ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":6101,"nickName":"小红薯10101","avatar":null,"introduction":null}]} =================================== 
2025-03-22 16:56:39.401 [http-nio-8082-exec-3] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [用户注册], 入参: {"email":"chinaanhuicsy@icloud.com"}, 请求类: UserController, 请求方法: register =================================== 
2025-03-22 16:56:39.405 [http-nio-8082-exec-3] DEBUG c.y.r.u.b.domain.mapper.UserDOMapper.selectByEmail - ==>  Preparing: select id, password from t_user where email = ?
2025-03-22 16:56:39.406 [http-nio-8082-exec-3] DEBUG c.y.r.u.b.domain.mapper.UserDOMapper.selectByEmail - ==> Parameters: chinaanhuicsy@icloud.com(String)
2025-03-22 16:56:39.407 [http-nio-8082-exec-3] DEBUG c.y.r.u.b.domain.mapper.UserDOMapper.selectByEmail - <==      Total: 1
2025-03-22 16:56:39.407 [http-nio-8082-exec-3] INFO  c.y.redbook.user.biz.service.impl.UserServiceImpl - ==> 用户是否注册, email: chinaanhuicsy@icloud.com, userDO: {"id":6101,"redbookId":null,"password":"$2a$10$qzYjnDnSb8VzEqNE7azGy.yD061rRWnzNQzduZcXQjV4iprv/Ie6m","nickname":null,"avatar":null,"birthday":null,"backgroundImg":null,"email":null,"sex":null,"status":null,"introduction":null,"createTime":null,"updateTime":null,"isDeleted":null}
2025-03-22 16:56:39.407 [http-nio-8082-exec-3] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [用户注册], 耗时: 6ms, 出参: {"success":true,"message":null,"errorCode":null,"data":6101} =================================== 
2025-03-22 16:56:39.436 [http-nio-8082-exec-10] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 6101
2025-03-22 16:56:39.436 [http-nio-8082-exec-10] DEBUG c.y.r.u.b.d.mapper.UserDOMapper.selectByPrimaryKey - ==>  Preparing: select id, redbook_id, `password`, nickname, avatar, birthday, background_img, email, sex, `status`, introduction, create_time, update_time, is_deleted from t_user where id = ?
2025-03-22 16:56:39.437 [http-nio-8082-exec-10] DEBUG c.y.r.u.b.d.mapper.UserDOMapper.selectByPrimaryKey - ==> Parameters: 6101(Long)
2025-03-22 16:56:39.438 [http-nio-8082-exec-10] DEBUG c.y.r.u.b.d.mapper.UserDOMapper.selectByPrimaryKey - <==      Total: 1
2025-03-22 16:56:39.438 [http-nio-8082-exec-10] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 6101
2025-03-22 16:57:47.034 [http-nio-8082-exec-1] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 6101
2025-03-22 16:57:47.035 [http-nio-8082-exec-1] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[6101]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 16:57:47.037 [http-nio-8082-exec-1] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 2ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":6101,"nickName":"小红薯10101","avatar":null,"introduction":null}]} =================================== 
2025-03-22 16:57:47.038 [http-nio-8082-exec-1] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 6101
2025-03-22 16:57:49.827 [http-nio-8082-exec-2] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 6101
2025-03-22 16:57:49.828 [http-nio-8082-exec-2] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[6101]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 16:57:49.829 [http-nio-8082-exec-2] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 1ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":6101,"nickName":"小红薯10101","avatar":null,"introduction":null}]} =================================== 
2025-03-22 16:57:49.829 [http-nio-8082-exec-2] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 6101
2025-03-22 16:57:53.741 [http-nio-8082-exec-7] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 6101
2025-03-22 16:57:53.742 [http-nio-8082-exec-7] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[6101]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 16:57:53.743 [http-nio-8082-exec-7] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 1ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":6101,"nickName":"小红薯10101","avatar":null,"introduction":null}]} =================================== 
2025-03-22 16:57:53.743 [http-nio-8082-exec-7] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 6101
2025-03-22 17:01:13.379 [http-nio-8082-exec-5] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 6101
2025-03-22 17:01:13.379 [http-nio-8082-exec-5] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[6101]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 17:01:13.381 [http-nio-8082-exec-5] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 2ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":6101,"nickName":"小红薯10101","avatar":null,"introduction":null}]} =================================== 
2025-03-22 17:01:13.381 [http-nio-8082-exec-5] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 6101
2025-03-22 17:01:28.693 [http-nio-8082-exec-6] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 6101
2025-03-22 17:01:28.694 [http-nio-8082-exec-6] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[6101]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 17:01:28.695 [http-nio-8082-exec-6] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 1ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":6101,"nickName":"小红薯10101","avatar":null,"introduction":null}]} =================================== 
2025-03-22 17:01:28.696 [http-nio-8082-exec-6] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 6101
2025-03-22 17:01:29.717 [http-nio-8082-exec-3] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 6101
2025-03-22 17:01:29.718 [http-nio-8082-exec-3] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[6101]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 17:01:29.720 [http-nio-8082-exec-3] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 2ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":6101,"nickName":"小红薯10101","avatar":null,"introduction":null}]} =================================== 
2025-03-22 17:01:29.720 [http-nio-8082-exec-3] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 6101
2025-03-22 17:04:10.927 [http-nio-8082-exec-9] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 6101
2025-03-22 17:04:10.928 [http-nio-8082-exec-9] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[6101]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 17:04:10.929 [http-nio-8082-exec-9] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 1ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":6101,"nickName":"小红薯10101","avatar":null,"introduction":null}]} =================================== 
2025-03-22 17:04:10.929 [http-nio-8082-exec-9] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 6101
2025-03-22 17:04:12.008 [http-nio-8082-exec-4] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 6101
2025-03-22 17:04:12.009 [http-nio-8082-exec-4] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[6101]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 17:04:12.010 [http-nio-8082-exec-4] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 1ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":6101,"nickName":"小红薯10101","avatar":null,"introduction":null}]} =================================== 
2025-03-22 17:04:12.011 [http-nio-8082-exec-4] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 6101
2025-03-22 17:19:30.438 [http-nio-8082-exec-2] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 6101
2025-03-22 17:19:30.439 [http-nio-8082-exec-2] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[6101]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 17:19:30.440 [http-nio-8082-exec-2] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 1ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":6101,"nickName":"小红薯10101","avatar":null,"introduction":null}]} =================================== 
2025-03-22 17:19:30.441 [http-nio-8082-exec-2] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 6101
2025-03-22 17:19:42.090 [http-nio-8082-exec-7] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 6101
2025-03-22 17:19:42.091 [http-nio-8082-exec-7] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[6101]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 17:19:42.093 [http-nio-8082-exec-7] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 2ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":6101,"nickName":"小红薯10101","avatar":null,"introduction":null}]} =================================== 
2025-03-22 17:19:42.093 [http-nio-8082-exec-7] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 6101
2025-03-22 17:19:45.227 [http-nio-8082-exec-8] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 6101
2025-03-22 17:19:45.229 [http-nio-8082-exec-8] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [查询用户信息], 入参: {"id":6101}, 请求类: UserController, 请求方法: findById =================================== 
2025-03-22 17:19:45.231 [http-nio-8082-exec-8] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [查询用户信息], 耗时: 3ms, 出参: {"success":true,"message":null,"errorCode":null,"data":{"id":6101,"nickName":"小红薯10101","avatar":null,"introduction":null}} =================================== 
2025-03-22 17:19:45.231 [http-nio-8082-exec-8] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 6101
2025-03-22 17:46:52.154 [Thread-10] WARN  c.alibaba.nacos.common.http.HttpClientBeanHolder - [HttpClientBeanHolder] Start destroying common HttpClient
2025-03-22 17:46:52.154 [Thread-7] WARN  com.alibaba.nacos.common.notify.NotifyCenter - [NotifyCenter] Start destroying Publisher
2025-03-22 17:46:52.155 [Thread-7] WARN  com.alibaba.nacos.common.notify.NotifyCenter - [NotifyCenter] Destruction of the end
2025-03-22 17:46:52.156 [Thread-10] WARN  c.alibaba.nacos.common.http.HttpClientBeanHolder - [HttpClientBeanHolder] Destruction of the end
2025-03-22 17:46:52.233 [SpringApplicationShutdownHook] INFO  c.a.cloud.nacos.registry.NacosServiceRegistry - De-registering from Nacos Server now...
2025-03-22 17:46:52.234 [SpringApplicationShutdownHook] INFO  com.alibaba.nacos.client.naming - [DEREGISTER-SERVICE] redbook deregistering service redbook-user with instance: Instance{instanceId='null', ip='10.108.20.173', port=8082, weight=1.0, healthy=true, enabled=true, ephemeral=true, clusterName='DEFAULT', serviceName='null', metadata={}}
2025-03-22 17:46:52.237 [SpringApplicationShutdownHook] INFO  c.a.cloud.nacos.registry.NacosServiceRegistry - De-registration finished.
2025-03-22 17:46:52.237 [SpringApplicationShutdownHook] INFO  com.alibaba.nacos.client.naming - com.alibaba.nacos.client.naming.cache.ServiceInfoHolder do shutdown begin
2025-03-22 17:46:52.237 [SpringApplicationShutdownHook] INFO  com.alibaba.nacos.client.naming - com.alibaba.nacos.client.naming.backups.FailoverReactor do shutdown begin
2025-03-22 17:46:52.237 [SpringApplicationShutdownHook] INFO  com.alibaba.nacos.client.naming - com.alibaba.nacos.client.naming.backups.FailoverReactor do shutdown stop
2025-03-22 17:46:52.237 [SpringApplicationShutdownHook] INFO  com.alibaba.nacos.client.naming - com.alibaba.nacos.client.naming.cache.ServiceInfoHolder do shutdown stop
2025-03-22 17:46:52.237 [SpringApplicationShutdownHook] INFO  com.alibaba.nacos.client.naming - com.alibaba.nacos.client.naming.remote.NamingClientProxyDelegate do shutdown begin
2025-03-22 17:46:52.237 [SpringApplicationShutdownHook] INFO  com.alibaba.nacos.client.naming - com.alibaba.nacos.client.naming.core.ServiceInfoUpdateService do shutdown begin
2025-03-22 17:46:52.237 [SpringApplicationShutdownHook] INFO  com.alibaba.nacos.client.naming - com.alibaba.nacos.client.naming.core.ServiceInfoUpdateService do shutdown stop
2025-03-22 17:46:52.237 [SpringApplicationShutdownHook] INFO  com.alibaba.nacos.client.naming - com.alibaba.nacos.client.naming.core.ServerListManager do shutdown begin
2025-03-22 17:46:52.237 [SpringApplicationShutdownHook] WARN  com.alibaba.nacos.client.naming - [NamingHttpClientManager] Start destroying NacosRestTemplate
2025-03-22 17:46:52.237 [SpringApplicationShutdownHook] WARN  com.alibaba.nacos.client.naming - [NamingHttpClientManager] Destruction of the end
2025-03-22 17:46:52.237 [SpringApplicationShutdownHook] INFO  com.alibaba.nacos.client.naming - com.alibaba.nacos.client.naming.core.ServerListManager do shutdown stop
2025-03-22 17:46:52.237 [SpringApplicationShutdownHook] INFO  com.alibaba.nacos.client.naming - com.alibaba.nacos.client.naming.remote.http.NamingHttpClientProxy do shutdown begin
2025-03-22 17:46:52.237 [SpringApplicationShutdownHook] WARN  com.alibaba.nacos.client.naming - [NamingHttpClientManager] Start destroying NacosRestTemplate
2025-03-22 17:46:52.237 [SpringApplicationShutdownHook] WARN  com.alibaba.nacos.client.naming - [NamingHttpClientManager] Destruction of the end
2025-03-22 17:46:52.237 [SpringApplicationShutdownHook] INFO  com.alibaba.nacos.client.naming - com.alibaba.nacos.client.naming.remote.http.NamingHttpClientProxy do shutdown stop
2025-03-22 17:46:52.238 [SpringApplicationShutdownHook] INFO  com.alibaba.nacos.common.remote.client - Shutdown rpc client, set status to shutdown
2025-03-22 17:46:52.238 [SpringApplicationShutdownHook] INFO  com.alibaba.nacos.common.remote.client - Shutdown client event executor java.util.concurrent.ScheduledThreadPoolExecutor@73bae1d5[Running, pool size = 2, active threads = 2, queued tasks = 0, completed tasks = 0]
2025-03-22 17:46:52.238 [SpringApplicationShutdownHook] INFO  com.alibaba.nacos.common.remote.client - Close current connection 1742626759222_172.17.0.1_34752
2025-03-22 17:46:52.240 [SpringApplicationShutdownHook] INFO  c.a.nacos.common.remote.client.grpc.GrpcClient - Shutdown grpc executor java.util.concurrent.ThreadPoolExecutor@3e7b2825[Running, pool size = 3, active threads = 0, queued tasks = 0, completed tasks = 2034]
2025-03-22 17:46:52.240 [SpringApplicationShutdownHook] INFO  com.alibaba.nacos.client.naming - Shutdown grpc redo service executor java.util.concurrent.ScheduledThreadPoolExecutor@39edda6d[Running, pool size = 1, active threads = 0, queued tasks = 1, completed tasks = 3341]
2025-03-22 17:46:52.241 [SpringApplicationShutdownHook] INFO  c.a.n.client.auth.ram.identify.CredentialWatcher - [null] CredentialWatcher is stopped
2025-03-22 17:46:52.241 [SpringApplicationShutdownHook] INFO  c.a.n.client.auth.ram.identify.CredentialService - [null] CredentialService is freed
2025-03-22 17:46:52.241 [SpringApplicationShutdownHook] INFO  com.alibaba.nacos.client.naming - com.alibaba.nacos.client.naming.remote.NamingClientProxyDelegate do shutdown stop
2025-03-22 17:46:52.385 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-03-22 17:46:52.386 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-03-22 19:11:02.759 [main] WARN  com.alibaba.nacos.client.logging.NacosLogging - Load Logback Configuration of Nacos fail, message: Could not initialize Logback Nacos logging from classpath:nacos-logback.xml
2025-03-22 19:11:02.802 [main] WARN  com.alibaba.nacos.client.logging.NacosLogging - Load Logback Configuration of Nacos fail, message: Could not initialize Logback Nacos logging from classpath:nacos-logback.xml
2025-03-22 19:11:03.141 [main] WARN  com.alibaba.nacos.client.logging.NacosLogging - Load Logback Configuration of Nacos fail, message: Could not initialize Logback Nacos logging from classpath:nacos-logback.xml
2025-03-22 19:11:03.149 [main] WARN  com.alibaba.nacos.client.logging.NacosLogging - Load Logback Configuration of Nacos fail, message: Could not initialize Logback Nacos logging from classpath:nacos-logback.xml
2025-03-22 19:11:03.149 [main] INFO  c.y.redbook.user.biz.RedbookUserBizApplication - The following 1 profile is active: "dev"
2025-03-22 19:11:03.508 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-22 19:11:03.510 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-22 19:11:03.523 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2025-03-22 19:11:03.654 [main] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=a6861ec5-f64d-3258-b3cc-6d969a327b3c
2025-03-22 19:11:03.674 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.yeyang.redbook.oss.api.FileFeignApi' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-03-22 19:11:03.675 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.yeyang.redbook.user.api.UserFeignApi' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-03-22 19:11:03.675 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.yeyang.redbook.distributed.id.generator.api.DistributedIdGeneratorFeignApi' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-03-22 19:11:03.985 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8082 (http)
2025-03-22 19:11:03.992 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-03-22 19:11:03.992 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.5]
2025-03-22 19:11:04.055 [main] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-03-22 19:11:04.055 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 895 ms
2025-03-22 19:11:04.154 [main] INFO  c.a.d.s.b.a.DruidDataSourceAutoConfigure - Init DruidDataSource
2025-03-22 19:11:04.333 [main] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-03-22 19:11:04.556 [main] INFO  o.s.cloud.openfeign.FeignClientFactoryBean - For 'redbook-oss' URL not provided. Will try picking an instance via load-balancing.
2025-03-22 19:11:04.760 [main] INFO  o.s.cloud.openfeign.FeignClientFactoryBean - For 'redbook-distributed-id-generator' URL not provided. Will try picking an instance via load-balancing.
2025-03-22 19:11:05.387 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8082 (http) with context path ''
2025-03-22 19:11:05.393 [main] WARN  com.alibaba.nacos.client.logging.NacosLogging - Load Logback Configuration of Nacos fail, message: Could not initialize Logback Nacos logging from classpath:nacos-logback.xml
2025-03-22 19:11:05.393 [main] INFO  com.alibaba.nacos.client.naming - initializer namespace from ans.namespace attribute : null
2025-03-22 19:11:05.394 [main] INFO  com.alibaba.nacos.client.naming - initializer namespace from ALIBABA_ALIWARE_NAMESPACE attribute :null
2025-03-22 19:11:05.395 [main] INFO  com.alibaba.nacos.client.naming - initializer namespace from namespace attribute :null
2025-03-22 19:11:05.415 [main] INFO  com.alibaba.nacos.client.utils.ParamUtil - [settings] [req-serv] nacos-server port:8848
2025-03-22 19:11:05.415 [main] INFO  com.alibaba.nacos.client.utils.ParamUtil - [settings] [http-client] connect timeout:1000
2025-03-22 19:11:05.416 [main] INFO  com.alibaba.nacos.client.utils.ParamUtil - PER_TASK_CONFIG_SIZE: 3000.0
2025-03-22 19:11:05.418 [main] INFO  c.a.n.p.auth.spi.client.ClientAuthPluginManager - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
2025-03-22 19:11:05.418 [main] INFO  c.a.n.p.auth.spi.client.ClientAuthPluginManager - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
2025-03-22 19:11:05.421 [main] INFO  c.a.n.client.auth.ram.identify.CredentialWatcher - null No credential found
2025-03-22 19:11:05.427 [main] INFO  com.alibaba.nacos.common.remote.client - [RpcClientFactory] create a new rpc client of 4e25413a-3f44-43df-819c-f9d64950b3e6
2025-03-22 19:11:05.441 [main] INFO  com.alibaba.nacos.common.remote.client - [4e25413a-3f44-43df-819c-f9d64950b3e6] RpcClient init, ServerListFactory = com.alibaba.nacos.client.naming.core.ServerListManager
2025-03-22 19:11:05.441 [main] INFO  com.alibaba.nacos.common.remote.client - [4e25413a-3f44-43df-819c-f9d64950b3e6] Registry connection listener to current client:com.alibaba.nacos.client.naming.remote.gprc.redo.NamingGrpcRedoService
2025-03-22 19:11:05.441 [main] INFO  com.alibaba.nacos.common.remote.client - [4e25413a-3f44-43df-819c-f9d64950b3e6] Register server push request handler:com.alibaba.nacos.client.naming.remote.gprc.NamingPushRequestHandler
2025-03-22 19:11:05.442 [main] INFO  com.alibaba.nacos.common.remote.client - [4e25413a-3f44-43df-819c-f9d64950b3e6] Try to connect to server on start up, server: {serverIp = '127.0.0.1', server main port = 8848}
2025-03-22 19:11:05.461 [main] INFO  c.a.nacos.common.remote.client.grpc.GrpcClient - grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2025-03-22 19:11:06.198 [main] INFO  com.alibaba.nacos.common.remote.client - [4e25413a-3f44-43df-819c-f9d64950b3e6] Success to connect to server [127.0.0.1:8848] on start up, connectionId = 1742641866032_172.17.0.1_44782
2025-03-22 19:11:06.199 [com.alibaba.nacos.client.remote.worker] INFO  com.alibaba.nacos.common.remote.client - [4e25413a-3f44-43df-819c-f9d64950b3e6] Notify connected event to listeners.
2025-03-22 19:11:06.199 [com.alibaba.nacos.client.remote.worker] INFO  com.alibaba.nacos.client.naming - Grpc connection connect
2025-03-22 19:11:06.199 [main] INFO  com.alibaba.nacos.common.remote.client - [4e25413a-3f44-43df-819c-f9d64950b3e6] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$ConnectResetRequestHandler
2025-03-22 19:11:06.199 [main] INFO  com.alibaba.nacos.common.remote.client - [4e25413a-3f44-43df-819c-f9d64950b3e6] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$$Lambda$1260/0x00000234cf925d88
2025-03-22 19:11:06.200 [main] INFO  com.alibaba.nacos.client.naming - [REGISTER-SERVICE] redbook registering service redbook-user with instance Instance{instanceId='null', ip='10.108.20.173', port=8082, weight=1.0, healthy=true, enabled=true, ephemeral=true, clusterName='DEFAULT', serviceName='null', metadata={IPv6=[2001:da8:204:1081:0:2ea3:f013:4e5b], preserved.register.source=SPRING_CLOUD}}
2025-03-22 19:11:06.212 [main] INFO  c.a.cloud.nacos.registry.NacosServiceRegistry - nacos registry, DEFAULT_GROUP redbook-user 10.108.20.173:8082 register finished
2025-03-22 19:11:06.367 [main] INFO  c.y.redbook.user.biz.RedbookUserBizApplication - Started RedbookUserBizApplication in 4.082 seconds (process running for 4.428)
2025-03-22 19:11:06.368 [main] INFO  c.y.r.u.biz.runner.PushRolePermissions2RedisRunner - ==> 服务启动，开始同步角色权限数据到 Redis 中...
2025-03-22 19:11:06.691 [main] WARN  c.y.r.u.biz.runner.PushRolePermissions2RedisRunner - ==> 角色权限数据已经同步至 Redis 中，不再同步...
2025-03-22 19:22:13.404 [http-nio-8082-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-22 19:22:13.404 [http-nio-8082-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-03-22 19:22:13.405 [http-nio-8082-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-03-22 19:22:13.462 [http-nio-8082-exec-1] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [用户注册], 入参: {"email":"chinaanhuicsy@icloud.com"}, 请求类: UserController, 请求方法: register =================================== 
2025-03-22 19:22:13.486 [http-nio-8082-exec-1] DEBUG c.y.r.u.b.domain.mapper.UserDOMapper.selectByEmail - ==>  Preparing: select id, password from t_user where email = ?
2025-03-22 19:22:13.650 [http-nio-8082-exec-1] DEBUG c.y.r.u.b.domain.mapper.UserDOMapper.selectByEmail - ==> Parameters: chinaanhuicsy@icloud.com(String)
2025-03-22 19:22:13.667 [http-nio-8082-exec-1] DEBUG c.y.r.u.b.domain.mapper.UserDOMapper.selectByEmail - <==      Total: 1
2025-03-22 19:22:13.670 [http-nio-8082-exec-1] INFO  c.y.redbook.user.biz.service.impl.UserServiceImpl - ==> 用户是否注册, email: chinaanhuicsy@icloud.com, userDO: {"id":6101,"redbookId":null,"password":"$2a$10$qzYjnDnSb8VzEqNE7azGy.yD061rRWnzNQzduZcXQjV4iprv/Ie6m","nickname":null,"avatar":null,"birthday":null,"backgroundImg":null,"email":null,"sex":null,"status":null,"introduction":null,"createTime":null,"updateTime":null,"isDeleted":null}
2025-03-22 19:22:13.672 [http-nio-8082-exec-1] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [用户注册], 耗时: 210ms, 出参: {"success":true,"message":null,"errorCode":null,"data":6101} =================================== 
2025-03-22 19:28:51.184 [http-nio-8082-exec-6] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 6101
2025-03-22 19:28:51.223 [http-nio-8082-exec-6] ERROR c.y.r.user.biz.exception.GlobalExceptionHandler - /user/update request error, 
org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'updateUserInfoReqVO' on field 'birthday': rejected value [2002-9-12]; codes [typeMismatch.updateUserInfoReqVO.birthday,typeMismatch.birthday,typeMismatch.java.time.LocalDate,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [updateUserInfoReqVO.birthday,birthday]; arguments []; default message [birthday]]; default message [Failed to convert property value of type 'java.lang.String' to required type 'java.time.LocalDate' for property 'birthday'; Failed to convert from type [java.lang.String] to type [java.time.LocalDate] for value '2002-9-12']
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:175)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:181)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:148)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:547)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:614)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at com.yeyang.framework.biz.context.filter.HeaderUserId2ContextFilter.doFilterInternal(HeaderUserId2ContextFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at com.alibaba.druid.support.jakarta.WebStatFilter.doFilter(WebStatFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:859)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1734)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-03-22 19:28:51.227 [http-nio-8082-exec-6] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 6101
2025-03-22 19:29:29.666 [http-nio-8082-exec-4] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 6101
2025-03-22 19:29:29.678 [http-nio-8082-exec-4] INFO  c.y.f.b.c.interceptor.FeignRequestInterceptor - ########## feign 请求设置请求头 userId: 6101
2025-03-22 19:29:29.706 [http-nio-8082-exec-4] INFO  com.alibaba.nacos.client.naming - [SUBSCRIBE-SERVICE] service:redbook-oss, group:DEFAULT_GROUP, clusters: 
2025-03-22 19:29:29.714 [http-nio-8082-exec-4] INFO  com.alibaba.nacos.client.naming - init new ips(0) service: DEFAULT_GROUP@@redbook-oss -> []
2025-03-22 19:29:29.719 [http-nio-8082-exec-4] INFO  com.alibaba.nacos.client.naming - current ips:(0) service: DEFAULT_GROUP@@redbook-oss -> []
2025-03-22 19:29:29.724 [http-nio-8082-exec-4] WARN  o.s.cloud.loadbalancer.core.RoundRobinLoadBalancer - No servers available for service: redbook-oss
2025-03-22 19:29:29.728 [http-nio-8082-exec-4] WARN  o.s.c.o.l.FeignBlockingLoadBalancerClient - Load balancer does not contain an instance for the service redbook-oss
2025-03-22 19:29:29.733 [http-nio-8082-exec-4] ERROR c.y.r.user.biz.exception.GlobalExceptionHandler - /user/update request error, 
feign.FeignException$ServiceUnavailable: [503] during [POST] to [http://redbook-oss/file/upload] [FileFeignApi#uploadFile(MultipartFile)]: [Load balancer does not contain an instance for the service redbook-oss]
	at feign.FeignException.serverErrorStatus(FeignException.java:265)
	at feign.FeignException.errorStatus(FeignException.java:206)
	at feign.FeignException.errorStatus(FeignException.java:194)
	at feign.FeignException.errorStatus(FeignException.java:171)
	at feign.codec.ErrorDecoder$Default.decode(ErrorDecoder.java:92)
	at feign.ResponseHandler.decodeError(ResponseHandler.java:136)
	at feign.ResponseHandler.handleResponse(ResponseHandler.java:70)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:116)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:72)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:98)
	at jdk.proxy2/jdk.proxy2.$Proxy95.uploadFile(Unknown Source)
	at com.yeyang.redbook.user.biz.rpc.OssRpcService.uploadFile(OssRpcService.java:23)
	at com.yeyang.redbook.user.biz.service.impl.UserServiceImpl.updateUserInfo(UserServiceImpl.java:109)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:699)
	at com.yeyang.redbook.user.biz.service.impl.UserServiceImpl$$SpringCGLIB$$0.updateUserInfo(<generated>)
	at com.yeyang.redbook.user.biz.controller.UserController.updateUserInfo(UserController.java:44)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.yeyang.redbook.user.biz.controller.UserController$$SpringCGLIB$$0.updateUserInfo(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:547)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:614)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at com.yeyang.framework.biz.context.filter.HeaderUserId2ContextFilter.doFilterInternal(HeaderUserId2ContextFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at com.alibaba.druid.support.jakarta.WebStatFilter.doFilter(WebStatFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:859)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1734)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-03-22 19:29:29.735 [http-nio-8082-exec-4] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 6101
2025-03-22 19:29:30.293 [nacos-grpc-client-executor-127.0.0.1-249] INFO  com.alibaba.nacos.common.remote.client - [4e25413a-3f44-43df-819c-f9d64950b3e6] Receive server push request, request = NotifySubscriberRequest, requestId = 4
2025-03-22 19:29:30.294 [nacos-grpc-client-executor-127.0.0.1-249] INFO  com.alibaba.nacos.common.remote.client - [4e25413a-3f44-43df-819c-f9d64950b3e6] Ack server push request, request = NotifySubscriberRequest, requestId = 4
2025-03-22 19:30:50.254 [nacos-grpc-client-executor-127.0.0.1-265] INFO  com.alibaba.nacos.common.remote.client - [4e25413a-3f44-43df-819c-f9d64950b3e6] Receive server push request, request = NotifySubscriberRequest, requestId = 5
2025-03-22 19:30:50.255 [nacos-grpc-client-executor-127.0.0.1-265] INFO  com.alibaba.nacos.client.naming - new ips(1) service: DEFAULT_GROUP@@redbook-oss -> [{"ip":"10.108.20.173","port":8081,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"DEFAULT","serviceName":"DEFAULT_GROUP@@redbook-oss","metadata":{"preserved.register.source":"SPRING_CLOUD","IPv6":"[2001:da8:204:1081:0:2ea3:f013:4e5b]"},"ipDeleteTimeout":30000,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000}]
2025-03-22 19:30:50.255 [nacos-grpc-client-executor-127.0.0.1-265] INFO  com.alibaba.nacos.client.naming - current ips:(1) service: DEFAULT_GROUP@@redbook-oss -> [{"ip":"10.108.20.173","port":8081,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"DEFAULT","serviceName":"DEFAULT_GROUP@@redbook-oss","metadata":{"preserved.register.source":"SPRING_CLOUD","IPv6":"[2001:da8:204:1081:0:2ea3:f013:4e5b]"},"ipDeleteTimeout":30000,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000}]
2025-03-22 19:30:50.256 [nacos-grpc-client-executor-127.0.0.1-265] INFO  com.alibaba.nacos.common.remote.client - [4e25413a-3f44-43df-819c-f9d64950b3e6] Ack server push request, request = NotifySubscriberRequest, requestId = 5
2025-03-22 19:31:18.224 [http-nio-8082-exec-3] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 6101
2025-03-22 19:31:18.246 [http-nio-8082-exec-3] INFO  c.y.f.b.c.interceptor.FeignRequestInterceptor - ########## feign 请求设置请求头 userId: 6101
2025-03-22 19:31:18.469 [http-nio-8082-exec-3] INFO  c.y.redbook.user.biz.service.impl.UserServiceImpl - ==> 调用 oss 服务成功，上传头像，url：http://127.0.0.1:9000/redbook-learning/2a8f8e45c1dd4b1eb686b84ae4ccc3de.jpg
2025-03-22 19:31:18.472 [http-nio-8082-exec-3] INFO  c.y.f.b.c.interceptor.FeignRequestInterceptor - ########## feign 请求设置请求头 userId: 6101
2025-03-22 19:31:18.563 [http-nio-8082-exec-3] INFO  c.y.redbook.user.biz.service.impl.UserServiceImpl - ==> 调用 oss 服务成功，上传背景图，url：http://127.0.0.1:9000/redbook-learning/fdb1e8b5b48140498b10d3b2e0d29e79.jpg
2025-03-22 19:31:18.578 [http-nio-8082-exec-3] DEBUG c.y.r.u.b.d.m.U.updateByPrimaryKeySelective - ==>  Preparing: update t_user SET redbook_id = ?, nickname = ?, avatar = ?, birthday = ?, background_img = ?, sex = ?, introduction = ?, update_time = ? where id = ?
2025-03-22 19:31:18.581 [http-nio-8082-exec-3] DEBUG c.y.r.u.b.d.m.U.updateByPrimaryKeySelective - ==> Parameters: yeyangjava(String), yeyang(String), http://127.0.0.1:9000/redbook-learning/2a8f8e45c1dd4b1eb686b84ae4ccc3de.jpg(String), 2002-09-12(LocalDate), http://127.0.0.1:9000/redbook-learning/fdb1e8b5b48140498b10d3b2e0d29e79.jpg(String), 1(Integer), 学生(String), 2025-03-22T19:31:18.563314600(LocalDateTime), 6101(Long)
2025-03-22 19:31:18.586 [http-nio-8082-exec-3] DEBUG c.y.r.u.b.d.m.U.updateByPrimaryKeySelective - <==    Updates: 1
2025-03-22 19:31:18.588 [http-nio-8082-exec-3] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 6101
2025-03-22 19:39:04.195 [http-nio-8082-exec-8] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 6101
2025-03-22 19:39:04.200 [http-nio-8082-exec-8] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[6101]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 19:39:04.213 [http-nio-8082-exec-8] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 13ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":6101,"nickName":"小红薯10101","avatar":null,"introduction":null}]} =================================== 
2025-03-22 19:39:04.215 [http-nio-8082-exec-8] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 6101
2025-03-22 19:39:18.375 [http-nio-8082-exec-9] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[6101]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 19:39:18.377 [http-nio-8082-exec-9] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 2ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":6101,"nickName":"小红薯10101","avatar":null,"introduction":null}]} =================================== 
2025-03-22 19:39:46.331 [http-nio-8082-exec-10] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [用户注册], 入参: {"email":"chinaanhuicsy@icloud.com"}, 请求类: UserController, 请求方法: register =================================== 
2025-03-22 19:39:46.332 [http-nio-8082-exec-10] DEBUG c.y.r.u.b.domain.mapper.UserDOMapper.selectByEmail - ==>  Preparing: select id, password from t_user where email = ?
2025-03-22 19:39:46.332 [http-nio-8082-exec-10] DEBUG c.y.r.u.b.domain.mapper.UserDOMapper.selectByEmail - ==> Parameters: chinaanhuicsy@icloud.com(String)
2025-03-22 19:39:46.333 [http-nio-8082-exec-10] DEBUG c.y.r.u.b.domain.mapper.UserDOMapper.selectByEmail - <==      Total: 1
2025-03-22 19:39:46.333 [http-nio-8082-exec-10] INFO  c.y.redbook.user.biz.service.impl.UserServiceImpl - ==> 用户是否注册, email: chinaanhuicsy@icloud.com, userDO: {"id":6101,"redbookId":null,"password":"$2a$10$qzYjnDnSb8VzEqNE7azGy.yD061rRWnzNQzduZcXQjV4iprv/Ie6m","nickname":null,"avatar":null,"birthday":null,"backgroundImg":null,"email":null,"sex":null,"status":null,"introduction":null,"createTime":null,"updateTime":null,"isDeleted":null}
2025-03-22 19:39:46.333 [http-nio-8082-exec-10] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [用户注册], 耗时: 2ms, 出参: {"success":true,"message":null,"errorCode":null,"data":6101} =================================== 
2025-03-22 19:39:46.361 [http-nio-8082-exec-1] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 6101
2025-03-22 19:39:46.362 [http-nio-8082-exec-1] DEBUG c.y.r.u.b.d.mapper.UserDOMapper.selectByPrimaryKey - ==>  Preparing: select id, redbook_id, `password`, nickname, avatar, birthday, background_img, email, sex, `status`, introduction, create_time, update_time, is_deleted from t_user where id = ?
2025-03-22 19:39:46.362 [http-nio-8082-exec-1] DEBUG c.y.r.u.b.d.mapper.UserDOMapper.selectByPrimaryKey - ==> Parameters: 6101(Long)
2025-03-22 19:39:46.365 [http-nio-8082-exec-1] DEBUG c.y.r.u.b.d.mapper.UserDOMapper.selectByPrimaryKey - <==      Total: 1
2025-03-22 19:39:46.367 [http-nio-8082-exec-1] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 6101
2025-03-22 19:40:05.529 [http-nio-8082-exec-2] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 6101
2025-03-22 19:40:05.534 [http-nio-8082-exec-2] DEBUG c.y.r.u.b.d.m.U.updateByPrimaryKeySelective - ==>  Preparing: update t_user SET redbook_id = ?, nickname = ?, birthday = ?, sex = ?, introduction = ?, update_time = ? where id = ?
2025-03-22 19:40:05.534 [http-nio-8082-exec-2] DEBUG c.y.r.u.b.d.m.U.updateByPrimaryKeySelective - ==> Parameters: yeyangjava(String), yeyang(String), 2002-09-13(LocalDate), 1(Integer), 学生(String), 2025-03-22T19:40:05.534191600(LocalDateTime), 6101(Long)
2025-03-22 19:40:05.538 [http-nio-8082-exec-2] DEBUG c.y.r.u.b.d.m.U.updateByPrimaryKeySelective - <==    Updates: 1
2025-03-22 19:40:05.539 [http-nio-8082-exec-2] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 6101
2025-03-22 19:40:05.551 [http-nio-8082-exec-6] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 6101
2025-03-22 19:40:05.551 [http-nio-8082-exec-6] DEBUG c.y.r.u.b.d.mapper.UserDOMapper.selectByPrimaryKey - ==>  Preparing: select id, redbook_id, `password`, nickname, avatar, birthday, background_img, email, sex, `status`, introduction, create_time, update_time, is_deleted from t_user where id = ?
2025-03-22 19:40:05.551 [http-nio-8082-exec-6] DEBUG c.y.r.u.b.d.mapper.UserDOMapper.selectByPrimaryKey - ==> Parameters: 6101(Long)
2025-03-22 19:40:05.552 [http-nio-8082-exec-6] DEBUG c.y.r.u.b.d.mapper.UserDOMapper.selectByPrimaryKey - <==      Total: 1
2025-03-22 19:40:05.553 [http-nio-8082-exec-6] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 6101
2025-03-22 19:40:58.420 [http-nio-8082-exec-3] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 6101
2025-03-22 19:40:58.421 [http-nio-8082-exec-3] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[6101]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 19:40:58.423 [http-nio-8082-exec-3] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 2ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":6101,"nickName":"小红薯10101","avatar":null,"introduction":null}]} =================================== 
2025-03-22 19:40:58.423 [http-nio-8082-exec-3] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 6101
2025-03-22 19:41:02.496 [http-nio-8082-exec-7] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 6101
2025-03-22 19:41:02.497 [http-nio-8082-exec-7] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[6101]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 19:41:02.499 [http-nio-8082-exec-7] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 2ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":6101,"nickName":"小红薯10101","avatar":null,"introduction":null}]} =================================== 
2025-03-22 19:41:02.500 [http-nio-8082-exec-7] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 6101
2025-03-22 19:41:07.547 [http-nio-8082-exec-9] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 6101
2025-03-22 19:41:07.548 [http-nio-8082-exec-9] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[6101]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 19:41:07.549 [http-nio-8082-exec-9] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 1ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":6101,"nickName":"小红薯10101","avatar":null,"introduction":null}]} =================================== 
2025-03-22 19:41:07.550 [http-nio-8082-exec-9] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 6101
2025-03-22 19:41:20.948 [http-nio-8082-exec-10] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 6101
2025-03-22 19:41:20.949 [http-nio-8082-exec-10] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[6101]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 19:41:20.952 [http-nio-8082-exec-10] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 2ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":6101,"nickName":"小红薯10101","avatar":null,"introduction":null}]} =================================== 
2025-03-22 19:41:20.952 [http-nio-8082-exec-10] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 6101
2025-03-22 19:41:45.929 [http-nio-8082-exec-1] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 6101
2025-03-22 19:41:45.930 [http-nio-8082-exec-1] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[6101]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 19:41:45.931 [http-nio-8082-exec-1] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 1ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":6101,"nickName":"小红薯10101","avatar":null,"introduction":null}]} =================================== 
2025-03-22 19:41:45.932 [http-nio-8082-exec-1] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 6101
2025-03-22 19:42:03.206 [http-nio-8082-exec-2] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 6101
2025-03-22 19:42:03.206 [http-nio-8082-exec-2] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[6101]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 19:42:03.208 [http-nio-8082-exec-2] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 2ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":6101,"nickName":"小红薯10101","avatar":null,"introduction":null}]} =================================== 
2025-03-22 19:42:03.209 [http-nio-8082-exec-2] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 6101
2025-03-22 19:42:23.884 [http-nio-8082-exec-6] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 6101
2025-03-22 19:42:23.885 [http-nio-8082-exec-6] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[6101]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 19:42:23.887 [http-nio-8082-exec-6] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 2ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":6101,"nickName":"小红薯10101","avatar":null,"introduction":null}]} =================================== 
2025-03-22 19:42:23.888 [http-nio-8082-exec-6] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 6101
2025-03-22 19:44:14.664 [http-nio-8082-exec-5] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 6101
2025-03-22 19:44:14.665 [http-nio-8082-exec-5] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[6101]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 19:44:14.667 [http-nio-8082-exec-5] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 2ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":6101,"nickName":"小红薯10101","avatar":null,"introduction":null}]} =================================== 
2025-03-22 19:44:14.667 [http-nio-8082-exec-5] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 6101
2025-03-22 19:44:31.711 [http-nio-8082-exec-3] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 6101
2025-03-22 19:44:31.712 [http-nio-8082-exec-3] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[6101]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 19:44:31.713 [http-nio-8082-exec-3] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 1ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":6101,"nickName":"小红薯10101","avatar":null,"introduction":null}]} =================================== 
2025-03-22 19:44:31.713 [http-nio-8082-exec-3] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 6101
2025-03-22 19:45:04.440 [http-nio-8082-exec-7] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 6101
2025-03-22 19:45:04.446 [http-nio-8082-exec-7] INFO  c.y.f.b.c.interceptor.FeignRequestInterceptor - ########## feign 请求设置请求头 userId: 6101
2025-03-22 19:45:04.477 [http-nio-8082-exec-7] INFO  c.y.redbook.user.biz.service.impl.UserServiceImpl - ==> 调用 oss 服务成功，上传头像，url：http://127.0.0.1:9000/redbook-learning/338cfef837f94b8487e48b47e93ce7da.jpg
2025-03-22 19:45:04.478 [http-nio-8082-exec-7] DEBUG c.y.r.u.b.d.m.U.updateByPrimaryKeySelective - ==>  Preparing: update t_user SET redbook_id = ?, nickname = ?, avatar = ?, birthday = ?, sex = ?, introduction = ?, update_time = ? where id = ?
2025-03-22 19:45:04.479 [http-nio-8082-exec-7] DEBUG c.y.r.u.b.d.m.U.updateByPrimaryKeySelective - ==> Parameters: yeyangjava(String), yeyang(String), http://127.0.0.1:9000/redbook-learning/338cfef837f94b8487e48b47e93ce7da.jpg(String), 2002-09-13(LocalDate), 1(Integer), 学生(String), 2025-03-22T19:45:04.477977600(LocalDateTime), 6101(Long)
2025-03-22 19:45:04.480 [http-nio-8082-exec-7] DEBUG c.y.r.u.b.d.m.U.updateByPrimaryKeySelective - <==    Updates: 1
2025-03-22 19:45:04.481 [http-nio-8082-exec-7] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 6101
2025-03-22 19:45:04.490 [http-nio-8082-exec-8] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 6101
2025-03-22 19:45:04.490 [http-nio-8082-exec-8] DEBUG c.y.r.u.b.d.mapper.UserDOMapper.selectByPrimaryKey - ==>  Preparing: select id, redbook_id, `password`, nickname, avatar, birthday, background_img, email, sex, `status`, introduction, create_time, update_time, is_deleted from t_user where id = ?
2025-03-22 19:45:04.491 [http-nio-8082-exec-8] DEBUG c.y.r.u.b.d.mapper.UserDOMapper.selectByPrimaryKey - ==> Parameters: 6101(Long)
2025-03-22 19:45:04.491 [http-nio-8082-exec-8] DEBUG c.y.r.u.b.d.mapper.UserDOMapper.selectByPrimaryKey - <==      Total: 1
2025-03-22 19:45:04.492 [http-nio-8082-exec-8] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 6101
2025-03-22 19:45:40.178 [http-nio-8082-exec-10] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[6101]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 19:45:40.180 [http-nio-8082-exec-10] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 2ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":6101,"nickName":"小红薯10101","avatar":null,"introduction":null}]} =================================== 
2025-03-22 19:46:23.690 [http-nio-8082-exec-2] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [用户注册], 入参: {"email":"chinaanhuicsy@icloud.com"}, 请求类: UserController, 请求方法: register =================================== 
2025-03-22 19:46:23.691 [http-nio-8082-exec-2] DEBUG c.y.r.u.b.domain.mapper.UserDOMapper.selectByEmail - ==>  Preparing: select id, password from t_user where email = ?
2025-03-22 19:46:23.691 [http-nio-8082-exec-2] DEBUG c.y.r.u.b.domain.mapper.UserDOMapper.selectByEmail - ==> Parameters: chinaanhuicsy@icloud.com(String)
2025-03-22 19:46:23.692 [http-nio-8082-exec-2] DEBUG c.y.r.u.b.domain.mapper.UserDOMapper.selectByEmail - <==      Total: 1
2025-03-22 19:46:23.692 [http-nio-8082-exec-2] INFO  c.y.redbook.user.biz.service.impl.UserServiceImpl - ==> 用户是否注册, email: chinaanhuicsy@icloud.com, userDO: {"id":6101,"redbookId":null,"password":"$2a$10$qzYjnDnSb8VzEqNE7azGy.yD061rRWnzNQzduZcXQjV4iprv/Ie6m","nickname":null,"avatar":null,"birthday":null,"backgroundImg":null,"email":null,"sex":null,"status":null,"introduction":null,"createTime":null,"updateTime":null,"isDeleted":null}
2025-03-22 19:46:23.692 [http-nio-8082-exec-2] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [用户注册], 耗时: 2ms, 出参: {"success":true,"message":null,"errorCode":null,"data":6101} =================================== 
2025-03-22 19:46:23.716 [http-nio-8082-exec-6] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 6101
2025-03-22 19:46:23.717 [http-nio-8082-exec-6] DEBUG c.y.r.u.b.d.mapper.UserDOMapper.selectByPrimaryKey - ==>  Preparing: select id, redbook_id, `password`, nickname, avatar, birthday, background_img, email, sex, `status`, introduction, create_time, update_time, is_deleted from t_user where id = ?
2025-03-22 19:46:23.717 [http-nio-8082-exec-6] DEBUG c.y.r.u.b.d.mapper.UserDOMapper.selectByPrimaryKey - ==> Parameters: 6101(Long)
2025-03-22 19:46:23.718 [http-nio-8082-exec-6] DEBUG c.y.r.u.b.d.mapper.UserDOMapper.selectByPrimaryKey - <==      Total: 1
2025-03-22 19:46:23.718 [http-nio-8082-exec-6] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 6101
2025-03-22 19:46:41.588 [http-nio-8082-exec-5] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 6101
2025-03-22 19:46:41.589 [http-nio-8082-exec-5] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[6101]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 19:46:41.591 [http-nio-8082-exec-5] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 2ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":6101,"nickName":"小红薯10101","avatar":null,"introduction":null}]} =================================== 
2025-03-22 19:46:41.591 [http-nio-8082-exec-5] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 6101
2025-03-22 19:51:20.122 [http-nio-8082-exec-9] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[6101]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 19:51:20.123 [http-nio-8082-exec-9] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 2ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":6101,"nickName":"小红薯10101","avatar":null,"introduction":null}]} =================================== 
2025-03-22 19:51:33.603 [http-nio-8082-exec-10] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [用户注册], 入参: {"email":"chinaanhuicsy@icloud.com"}, 请求类: UserController, 请求方法: register =================================== 
2025-03-22 19:51:33.604 [http-nio-8082-exec-10] DEBUG c.y.r.u.b.domain.mapper.UserDOMapper.selectByEmail - ==>  Preparing: select id, password from t_user where email = ?
2025-03-22 19:51:33.604 [http-nio-8082-exec-10] DEBUG c.y.r.u.b.domain.mapper.UserDOMapper.selectByEmail - ==> Parameters: chinaanhuicsy@icloud.com(String)
2025-03-22 19:51:33.605 [http-nio-8082-exec-10] DEBUG c.y.r.u.b.domain.mapper.UserDOMapper.selectByEmail - <==      Total: 1
2025-03-22 19:51:33.605 [http-nio-8082-exec-10] INFO  c.y.redbook.user.biz.service.impl.UserServiceImpl - ==> 用户是否注册, email: chinaanhuicsy@icloud.com, userDO: {"id":6101,"redbookId":null,"password":"$2a$10$qzYjnDnSb8VzEqNE7azGy.yD061rRWnzNQzduZcXQjV4iprv/Ie6m","nickname":null,"avatar":null,"birthday":null,"backgroundImg":null,"email":null,"sex":null,"status":null,"introduction":null,"createTime":null,"updateTime":null,"isDeleted":null}
2025-03-22 19:51:33.606 [http-nio-8082-exec-10] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [用户注册], 耗时: 3ms, 出参: {"success":true,"message":null,"errorCode":null,"data":6101} =================================== 
2025-03-22 19:51:33.630 [http-nio-8082-exec-1] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 6101
2025-03-22 19:51:33.630 [http-nio-8082-exec-1] DEBUG c.y.r.u.b.d.mapper.UserDOMapper.selectByPrimaryKey - ==>  Preparing: select id, redbook_id, `password`, nickname, avatar, birthday, background_img, email, sex, `status`, introduction, create_time, update_time, is_deleted from t_user where id = ?
2025-03-22 19:51:33.631 [http-nio-8082-exec-1] DEBUG c.y.r.u.b.d.mapper.UserDOMapper.selectByPrimaryKey - ==> Parameters: 6101(Long)
2025-03-22 19:51:33.632 [http-nio-8082-exec-1] DEBUG c.y.r.u.b.d.mapper.UserDOMapper.selectByPrimaryKey - <==      Total: 1
2025-03-22 19:51:33.632 [http-nio-8082-exec-1] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 6101
2025-03-22 19:51:50.034 [http-nio-8082-exec-2] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 6101
2025-03-22 19:51:50.034 [http-nio-8082-exec-2] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[6101]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 19:51:50.035 [http-nio-8082-exec-2] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 1ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":6101,"nickName":"小红薯10101","avatar":null,"introduction":null}]} =================================== 
2025-03-22 19:51:50.036 [http-nio-8082-exec-2] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 6101
2025-03-22 19:51:53.754 [http-nio-8082-exec-6] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 6101
2025-03-22 19:51:53.755 [http-nio-8082-exec-6] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[6101]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 19:51:53.757 [http-nio-8082-exec-6] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 2ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":6101,"nickName":"小红薯10101","avatar":null,"introduction":null}]} =================================== 
2025-03-22 19:51:53.757 [http-nio-8082-exec-6] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 6101
2025-03-22 19:52:57.048 [http-nio-8082-exec-7] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[6101]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 19:52:57.052 [http-nio-8082-exec-7] DEBUG c.y.r.u.biz.domain.mapper.UserDOMapper.selectByIds - ==>  Preparing: select id, nickname, avatar, introduction from t_user where status = 0 and is_deleted = 0 and id in ( ? )
2025-03-22 19:52:57.054 [http-nio-8082-exec-7] DEBUG c.y.r.u.biz.domain.mapper.UserDOMapper.selectByIds - ==> Parameters: 6101(Long)
2025-03-22 19:52:57.055 [http-nio-8082-exec-7] DEBUG c.y.r.u.biz.domain.mapper.UserDOMapper.selectByIds - <==      Total: 1
2025-03-22 19:52:57.056 [http-nio-8082-exec-7] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 9ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":6101,"nickName":"yeyang","avatar":"http://127.0.0.1:9000/redbook-learning/338cfef837f94b8487e48b47e93ce7da.jpg","introduction":"学生"}]} =================================== 
2025-03-22 19:53:31.502 [http-nio-8082-exec-8] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [用户注册], 入参: {"email":"chinaanhuicsy@icloud.com"}, 请求类: UserController, 请求方法: register =================================== 
2025-03-22 19:53:31.502 [http-nio-8082-exec-8] DEBUG c.y.r.u.b.domain.mapper.UserDOMapper.selectByEmail - ==>  Preparing: select id, password from t_user where email = ?
2025-03-22 19:53:31.502 [http-nio-8082-exec-8] DEBUG c.y.r.u.b.domain.mapper.UserDOMapper.selectByEmail - ==> Parameters: chinaanhuicsy@icloud.com(String)
2025-03-22 19:53:31.503 [http-nio-8082-exec-8] DEBUG c.y.r.u.b.domain.mapper.UserDOMapper.selectByEmail - <==      Total: 1
2025-03-22 19:53:31.503 [http-nio-8082-exec-8] INFO  c.y.redbook.user.biz.service.impl.UserServiceImpl - ==> 用户是否注册, email: chinaanhuicsy@icloud.com, userDO: {"id":6101,"redbookId":null,"password":"$2a$10$qzYjnDnSb8VzEqNE7azGy.yD061rRWnzNQzduZcXQjV4iprv/Ie6m","nickname":null,"avatar":null,"birthday":null,"backgroundImg":null,"email":null,"sex":null,"status":null,"introduction":null,"createTime":null,"updateTime":null,"isDeleted":null}
2025-03-22 19:53:31.503 [http-nio-8082-exec-8] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [用户注册], 耗时: 1ms, 出参: {"success":true,"message":null,"errorCode":null,"data":6101} =================================== 
2025-03-22 19:53:31.525 [http-nio-8082-exec-9] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 6101
2025-03-22 19:53:31.525 [http-nio-8082-exec-9] DEBUG c.y.r.u.b.d.mapper.UserDOMapper.selectByPrimaryKey - ==>  Preparing: select id, redbook_id, `password`, nickname, avatar, birthday, background_img, email, sex, `status`, introduction, create_time, update_time, is_deleted from t_user where id = ?
2025-03-22 19:53:31.526 [http-nio-8082-exec-9] DEBUG c.y.r.u.b.d.mapper.UserDOMapper.selectByPrimaryKey - ==> Parameters: 6101(Long)
2025-03-22 19:53:31.527 [http-nio-8082-exec-9] DEBUG c.y.r.u.b.d.mapper.UserDOMapper.selectByPrimaryKey - <==      Total: 1
2025-03-22 19:53:31.527 [http-nio-8082-exec-9] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 6101
2025-03-22 19:53:58.147 [http-nio-8082-exec-1] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 6101
2025-03-22 19:53:58.148 [http-nio-8082-exec-1] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[6101]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 19:53:58.149 [http-nio-8082-exec-1] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 1ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":6101,"nickName":"yeyang","avatar":"http://127.0.0.1:9000/redbook-learning/338cfef837f94b8487e48b47e93ce7da.jpg","introduction":"学生"}]} =================================== 
2025-03-22 19:53:58.150 [http-nio-8082-exec-1] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 6101
2025-03-22 20:00:57.594 [http-nio-8082-exec-5] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[6101]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 20:00:57.596 [http-nio-8082-exec-5] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 2ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":6101,"nickName":"yeyang","avatar":"http://127.0.0.1:9000/redbook-learning/338cfef837f94b8487e48b47e93ce7da.jpg","introduction":"学生"}]} =================================== 
2025-03-22 20:01:19.939 [http-nio-8082-exec-3] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [用户注册], 入参: {"email":"2861173454@qq.com"}, 请求类: UserController, 请求方法: register =================================== 
2025-03-22 20:01:19.939 [http-nio-8082-exec-3] DEBUG c.y.r.u.b.domain.mapper.UserDOMapper.selectByEmail - ==>  Preparing: select id, password from t_user where email = ?
2025-03-22 20:01:19.940 [http-nio-8082-exec-3] DEBUG c.y.r.u.b.domain.mapper.UserDOMapper.selectByEmail - ==> Parameters: 2861173454@qq.com(String)
2025-03-22 20:01:19.941 [http-nio-8082-exec-3] DEBUG c.y.r.u.b.domain.mapper.UserDOMapper.selectByEmail - <==      Total: 1
2025-03-22 20:01:19.941 [http-nio-8082-exec-3] INFO  c.y.redbook.user.biz.service.impl.UserServiceImpl - ==> 用户是否注册, email: 2861173454@qq.com, userDO: {"id":8100,"redbookId":null,"password":null,"nickname":null,"avatar":null,"birthday":null,"backgroundImg":null,"email":null,"sex":null,"status":null,"introduction":null,"createTime":null,"updateTime":null,"isDeleted":null}
2025-03-22 20:01:19.942 [http-nio-8082-exec-3] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [用户注册], 耗时: 4ms, 出参: {"success":true,"message":null,"errorCode":null,"data":8100} =================================== 
2025-03-22 20:01:19.963 [http-nio-8082-exec-7] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 8100
2025-03-22 20:01:19.964 [http-nio-8082-exec-7] DEBUG c.y.r.u.b.d.mapper.UserDOMapper.selectByPrimaryKey - ==>  Preparing: select id, redbook_id, `password`, nickname, avatar, birthday, background_img, email, sex, `status`, introduction, create_time, update_time, is_deleted from t_user where id = ?
2025-03-22 20:01:19.964 [http-nio-8082-exec-7] DEBUG c.y.r.u.b.d.mapper.UserDOMapper.selectByPrimaryKey - ==> Parameters: 8100(Long)
2025-03-22 20:01:19.965 [http-nio-8082-exec-7] DEBUG c.y.r.u.b.d.mapper.UserDOMapper.selectByPrimaryKey - <==      Total: 1
2025-03-22 20:01:19.966 [http-nio-8082-exec-7] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 8100
2025-03-22 20:06:35.190 [http-nio-8082-exec-1] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 8100
2025-03-22 20:06:35.191 [http-nio-8082-exec-1] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[6101]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 20:06:35.193 [http-nio-8082-exec-1] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 2ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":6101,"nickName":"yeyang","avatar":"http://127.0.0.1:9000/redbook-learning/338cfef837f94b8487e48b47e93ce7da.jpg","introduction":"学生"}]} =================================== 
2025-03-22 20:06:35.193 [http-nio-8082-exec-1] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 8100
2025-03-22 20:06:51.380 [http-nio-8082-exec-2] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 8100
2025-03-22 20:06:51.381 [http-nio-8082-exec-2] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[6101]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 20:06:51.382 [http-nio-8082-exec-2] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 2ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":6101,"nickName":"yeyang","avatar":"http://127.0.0.1:9000/redbook-learning/338cfef837f94b8487e48b47e93ce7da.jpg","introduction":"学生"}]} =================================== 
2025-03-22 20:06:51.382 [http-nio-8082-exec-2] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 8100
2025-03-22 20:10:26.454 [http-nio-8082-exec-4] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 8100
2025-03-22 20:10:26.455 [http-nio-8082-exec-4] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[6101]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 20:10:26.456 [http-nio-8082-exec-4] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 1ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":6101,"nickName":"yeyang","avatar":"http://127.0.0.1:9000/redbook-learning/338cfef837f94b8487e48b47e93ce7da.jpg","introduction":"学生"}]} =================================== 
2025-03-22 20:10:26.457 [http-nio-8082-exec-4] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 8100
2025-03-22 20:20:41.622 [http-nio-8082-exec-3] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 8100
2025-03-22 20:20:41.631 [http-nio-8082-exec-3] INFO  c.y.f.b.c.interceptor.FeignRequestInterceptor - ########## feign 请求设置请求头 userId: 8100
2025-03-22 20:20:41.691 [http-nio-8082-exec-3] INFO  c.y.redbook.user.biz.service.impl.UserServiceImpl - ==> 调用 oss 服务成功，上传头像，url：http://127.0.0.1:9000/redbook-learning/9038eef599604ab7ab2f9c5b90fbbf26.png
2025-03-22 20:20:41.692 [http-nio-8082-exec-3] WARN  c.y.r.user.biz.exception.GlobalExceptionHandler - /user/update request error, errorCode: USER-10001, errorMessage: 昵称请设置2-24个字符，不能使用@《/等特殊字符
2025-03-22 20:20:41.693 [http-nio-8082-exec-3] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 8100
2025-03-22 20:20:50.052 [http-nio-8082-exec-7] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 8100
2025-03-22 20:20:50.061 [http-nio-8082-exec-7] INFO  c.y.f.b.c.interceptor.FeignRequestInterceptor - ########## feign 请求设置请求头 userId: 8100
2025-03-22 20:20:50.123 [http-nio-8082-exec-7] INFO  c.y.redbook.user.biz.service.impl.UserServiceImpl - ==> 调用 oss 服务成功，上传头像，url：http://127.0.0.1:9000/redbook-learning/fcba5d8187914e409aec698517eda238.png
2025-03-22 20:20:50.127 [http-nio-8082-exec-7] DEBUG c.y.r.u.b.d.m.U.updateByPrimaryKeySelective - ==>  Preparing: update t_user SET redbook_id = ?, nickname = ?, avatar = ?, birthday = ?, sex = ?, introduction = ?, update_time = ? where id = ?
2025-03-22 20:20:50.128 [http-nio-8082-exec-7] DEBUG c.y.r.u.b.d.m.U.updateByPrimaryKeySelective - ==> Parameters: test10001(String), 测试账号10001(String), http://127.0.0.1:9000/redbook-learning/fcba5d8187914e409aec698517eda238.png(String), 2025-03-01(LocalDate), 0(Integer), 管理员测试专用账号1.0(String), 2025-03-22T20:20:50.124457100(LocalDateTime), 8100(Long)
2025-03-22 20:20:50.132 [http-nio-8082-exec-7] DEBUG c.y.r.u.b.d.m.U.updateByPrimaryKeySelective - <==    Updates: 1
2025-03-22 20:20:50.133 [http-nio-8082-exec-7] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 8100
2025-03-22 20:20:50.142 [http-nio-8082-exec-8] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 8100
2025-03-22 20:20:50.143 [http-nio-8082-exec-8] DEBUG c.y.r.u.b.d.mapper.UserDOMapper.selectByPrimaryKey - ==>  Preparing: select id, redbook_id, `password`, nickname, avatar, birthday, background_img, email, sex, `status`, introduction, create_time, update_time, is_deleted from t_user where id = ?
2025-03-22 20:20:50.143 [http-nio-8082-exec-8] DEBUG c.y.r.u.b.d.mapper.UserDOMapper.selectByPrimaryKey - ==> Parameters: 8100(Long)
2025-03-22 20:20:50.144 [http-nio-8082-exec-8] DEBUG c.y.r.u.b.d.mapper.UserDOMapper.selectByPrimaryKey - <==      Total: 1
2025-03-22 20:20:50.145 [http-nio-8082-exec-8] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 8100
2025-03-22 20:23:38.859 [http-nio-8082-exec-10] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 8100
2025-03-22 20:23:38.860 [http-nio-8082-exec-10] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[6101]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 20:23:38.861 [http-nio-8082-exec-10] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 1ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":6101,"nickName":"yeyang","avatar":"http://127.0.0.1:9000/redbook-learning/338cfef837f94b8487e48b47e93ce7da.jpg","introduction":"学生"}]} =================================== 
2025-03-22 20:23:38.862 [http-nio-8082-exec-10] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 8100
2025-03-22 20:24:01.520 [http-nio-8082-exec-1] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 8100
2025-03-22 20:24:01.520 [http-nio-8082-exec-1] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[8100,6101]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 20:24:01.523 [http-nio-8082-exec-1] DEBUG c.y.r.u.biz.domain.mapper.UserDOMapper.selectByIds - ==>  Preparing: select id, nickname, avatar, introduction from t_user where status = 0 and is_deleted = 0 and id in ( ? )
2025-03-22 20:24:01.523 [http-nio-8082-exec-1] DEBUG c.y.r.u.biz.domain.mapper.UserDOMapper.selectByIds - ==> Parameters: 8100(Long)
2025-03-22 20:24:01.525 [http-nio-8082-exec-1] DEBUG c.y.r.u.biz.domain.mapper.UserDOMapper.selectByIds - <==      Total: 1
2025-03-22 20:24:01.526 [http-nio-8082-exec-1] ERROR c.y.r.user.biz.exception.GlobalExceptionHandler - /user/findByIds request error, 
java.lang.UnsupportedOperationException: null
	at java.base/java.util.ImmutableCollections.uoe(ImmutableCollections.java:142)
	at java.base/java.util.ImmutableCollections$AbstractImmutableCollection.addAll(ImmutableCollections.java:148)
	at com.yeyang.redbook.user.biz.service.impl.UserServiceImpl.findByIds(UserServiceImpl.java:469)
	at jdk.internal.reflect.GeneratedMethodAccessor41.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:699)
	at com.yeyang.redbook.user.biz.service.impl.UserServiceImpl$$SpringCGLIB$$0.findByIds(<generated>)
	at com.yeyang.redbook.user.biz.controller.UserController.findByIds(UserController.java:85)
	at jdk.internal.reflect.GeneratedMethodAccessor30.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.yeyang.framework.biz.operationlog.aspect.ApiOperationLogAspect.doAround(ApiOperationLogAspect.java:53)
	at jdk.internal.reflect.GeneratedMethodAccessor35.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:623)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:173)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.yeyang.redbook.user.biz.controller.UserController$$SpringCGLIB$$0.findByIds(<generated>)
	at jdk.internal.reflect.GeneratedMethodAccessor30.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:547)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:614)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at com.yeyang.framework.biz.context.filter.HeaderUserId2ContextFilter.doFilterInternal(HeaderUserId2ContextFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at com.alibaba.druid.support.jakarta.WebStatFilter.doFilter(WebStatFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:859)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1734)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-03-22 20:24:01.527 [http-nio-8082-exec-1] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 8100
2025-03-22 20:24:06.370 [http-nio-8082-exec-2] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 8100
2025-03-22 20:24:06.371 [http-nio-8082-exec-2] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[8100,6101]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 20:24:06.372 [http-nio-8082-exec-2] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 1ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":8100,"nickName":"测试账号10001","avatar":"http://127.0.0.1:9000/redbook-learning/fcba5d8187914e409aec698517eda238.png","introduction":"管理员测试专用账号1.0"},{"id":6101,"nickName":"yeyang","avatar":"http://127.0.0.1:9000/redbook-learning/338cfef837f94b8487e48b47e93ce7da.jpg","introduction":"学生"}]} =================================== 
2025-03-22 20:24:06.373 [http-nio-8082-exec-2] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 8100
2025-03-22 20:24:13.783 [http-nio-8082-exec-6] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 8100
2025-03-22 20:24:13.784 [http-nio-8082-exec-6] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[8100,6101]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 20:24:13.785 [http-nio-8082-exec-6] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 1ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":8100,"nickName":"测试账号10001","avatar":"http://127.0.0.1:9000/redbook-learning/fcba5d8187914e409aec698517eda238.png","introduction":"管理员测试专用账号1.0"},{"id":6101,"nickName":"yeyang","avatar":"http://127.0.0.1:9000/redbook-learning/338cfef837f94b8487e48b47e93ce7da.jpg","introduction":"学生"}]} =================================== 
2025-03-22 20:24:13.786 [http-nio-8082-exec-6] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 8100
2025-03-22 20:38:17.664 [http-nio-8082-exec-5] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 8100
2025-03-22 20:38:17.664 [http-nio-8082-exec-5] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[8100,6101]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 20:38:17.666 [http-nio-8082-exec-5] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 2ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":8100,"nickName":"测试账号10001","avatar":"http://127.0.0.1:9000/redbook-learning/fcba5d8187914e409aec698517eda238.png","introduction":"管理员测试专用账号1.0"},{"id":6101,"nickName":"yeyang","avatar":"http://127.0.0.1:9000/redbook-learning/338cfef837f94b8487e48b47e93ce7da.jpg","introduction":"学生"}]} =================================== 
2025-03-22 20:38:17.667 [http-nio-8082-exec-5] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 8100
2025-03-22 20:38:23.425 [http-nio-8082-exec-3] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 8100
2025-03-22 20:38:23.425 [http-nio-8082-exec-3] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[8100,6101]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 20:38:23.427 [http-nio-8082-exec-3] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 2ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":8100,"nickName":"测试账号10001","avatar":"http://127.0.0.1:9000/redbook-learning/fcba5d8187914e409aec698517eda238.png","introduction":"管理员测试专用账号1.0"},{"id":6101,"nickName":"yeyang","avatar":"http://127.0.0.1:9000/redbook-learning/338cfef837f94b8487e48b47e93ce7da.jpg","introduction":"学生"}]} =================================== 
2025-03-22 20:38:23.427 [http-nio-8082-exec-3] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 8100
2025-03-22 22:24:09.877 [http-nio-8082-exec-8] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 8100
2025-03-22 22:24:09.891 [http-nio-8082-exec-8] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[8100,6101]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 22:24:09.895 [http-nio-8082-exec-8] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 5ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":8100,"nickName":"测试账号10001","avatar":"http://127.0.0.1:9000/redbook-learning/fcba5d8187914e409aec698517eda238.png","introduction":"管理员测试专用账号1.0"},{"id":6101,"nickName":"yeyang","avatar":"http://127.0.0.1:9000/redbook-learning/338cfef837f94b8487e48b47e93ce7da.jpg","introduction":"学生"}]} =================================== 
2025-03-22 22:24:09.899 [http-nio-8082-exec-8] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 8100
2025-03-22 22:28:23.952 [http-nio-8082-exec-10] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 8100
2025-03-22 22:28:23.953 [http-nio-8082-exec-10] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [批量查询用户信息], 入参: {"ids":[8100,6101]}, 请求类: UserController, 请求方法: findByIds =================================== 
2025-03-22 22:28:23.955 [http-nio-8082-exec-10] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [批量查询用户信息], 耗时: 2ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":8100,"nickName":"测试账号10001","avatar":"http://127.0.0.1:9000/redbook-learning/fcba5d8187914e409aec698517eda238.png","introduction":"管理员测试专用账号1.0"},{"id":6101,"nickName":"yeyang","avatar":"http://127.0.0.1:9000/redbook-learning/338cfef837f94b8487e48b47e93ce7da.jpg","introduction":"学生"}]} =================================== 
2025-03-22 22:28:23.955 [http-nio-8082-exec-10] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 8100
2025-03-22 22:36:18.564 [http-nio-8082-exec-2] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 8100
2025-03-22 22:36:18.572 [http-nio-8082-exec-2] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [查询用户信息], 入参: {"id":8100}, 请求类: UserController, 请求方法: findById =================================== 
2025-03-22 22:36:18.578 [http-nio-8082-exec-2] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [查询用户信息], 耗时: 7ms, 出参: {"success":true,"message":null,"errorCode":null,"data":{"id":8100,"nickName":"测试账号10001","avatar":"http://127.0.0.1:9000/redbook-learning/fcba5d8187914e409aec698517eda238.png","introduction":"管理员测试专用账号1.0"}} =================================== 
2025-03-22 22:36:18.579 [http-nio-8082-exec-2] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 8100
2025-03-22 22:38:38.913 [http-nio-8082-exec-4] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 8100
2025-03-22 22:38:38.914 [http-nio-8082-exec-4] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [查询用户信息], 入参: {"id":8100}, 请求类: UserController, 请求方法: findById =================================== 
2025-03-22 22:38:38.914 [http-nio-8082-exec-4] INFO  c.y.redbook.user.biz.service.impl.UserServiceImpl - ==> 命中了本地缓存；FindUserByIdRspDTO(id=8100, nickName=测试账号10001, avatar=http://127.0.0.1:9000/redbook-learning/fcba5d8187914e409aec698517eda238.png, introduction=管理员测试专用账号1.0)
2025-03-22 22:38:38.915 [http-nio-8082-exec-4] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [查询用户信息], 耗时: 1ms, 出参: {"success":true,"message":null,"errorCode":null,"data":{"id":8100,"nickName":"测试账号10001","avatar":"http://127.0.0.1:9000/redbook-learning/fcba5d8187914e409aec698517eda238.png","introduction":"管理员测试专用账号1.0"}} =================================== 
2025-03-22 22:38:38.916 [http-nio-8082-exec-4] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 8100
2025-03-22 22:41:15.498 [http-nio-8082-exec-3] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 8100
2025-03-22 22:41:15.499 [http-nio-8082-exec-3] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [查询用户信息], 入参: {"id":8100}, 请求类: UserController, 请求方法: findById =================================== 
2025-03-22 22:41:15.499 [http-nio-8082-exec-3] INFO  c.y.redbook.user.biz.service.impl.UserServiceImpl - ==> 命中了本地缓存；FindUserByIdRspDTO(id=8100, nickName=测试账号10001, avatar=http://127.0.0.1:9000/redbook-learning/fcba5d8187914e409aec698517eda238.png, introduction=管理员测试专用账号1.0)
2025-03-22 22:41:15.499 [http-nio-8082-exec-3] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [查询用户信息], 耗时: 0ms, 出参: {"success":true,"message":null,"errorCode":null,"data":{"id":8100,"nickName":"测试账号10001","avatar":"http://127.0.0.1:9000/redbook-learning/fcba5d8187914e409aec698517eda238.png","introduction":"管理员测试专用账号1.0"}} =================================== 
2025-03-22 22:41:15.500 [http-nio-8082-exec-3] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 8100
2025-03-22 22:42:07.417 [http-nio-8082-exec-7] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 8100
2025-03-22 22:42:07.418 [http-nio-8082-exec-7] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [查询用户信息], 入参: {"id":8100}, 请求类: UserController, 请求方法: findById =================================== 
2025-03-22 22:42:07.419 [http-nio-8082-exec-7] INFO  c.y.redbook.user.biz.service.impl.UserServiceImpl - ==> 命中了本地缓存；FindUserByIdRspDTO(id=8100, nickName=测试账号10001, avatar=http://127.0.0.1:9000/redbook-learning/fcba5d8187914e409aec698517eda238.png, introduction=管理员测试专用账号1.0)
2025-03-22 22:42:07.419 [http-nio-8082-exec-7] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [查询用户信息], 耗时: 1ms, 出参: {"success":true,"message":null,"errorCode":null,"data":{"id":8100,"nickName":"测试账号10001","avatar":"http://127.0.0.1:9000/redbook-learning/fcba5d8187914e409aec698517eda238.png","introduction":"管理员测试专用账号1.0"}} =================================== 
2025-03-22 22:42:07.419 [http-nio-8082-exec-7] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 8100
2025-03-22 23:40:03.599 [http-nio-8082-exec-9] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 8100
2025-03-22 23:40:03.610 [http-nio-8082-exec-9] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求开始: [查询用户信息], 入参: {"id":8100}, 请求类: UserController, 请求方法: findById =================================== 
2025-03-22 23:40:03.617 [http-nio-8082-exec-9] INFO  c.y.f.b.operationlog.aspect.ApiOperationLogAspect - ====== 请求结束: [查询用户信息], 耗时: 7ms, 出参: {"success":true,"message":null,"errorCode":null,"data":{"id":8100,"nickName":"测试账号10001","avatar":"http://127.0.0.1:9000/redbook-learning/fcba5d8187914e409aec698517eda238.png","introduction":"管理员测试专用账号1.0"}} =================================== 
2025-03-22 23:40:03.620 [http-nio-8082-exec-9] INFO  c.y.f.b.context.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 8100
